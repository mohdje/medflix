[{"D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\index.js":"1","D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\reportWebVitals.js":"2","D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\App.js":"3","D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\js\\moviesAPI.js":"4","D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\components\\modal\\ModalListGenre.js":"5","D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\components\\SplashScreen.js":"6","D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\components\\modal\\ModalSearch.js":"7","D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\components\\navbar\\NavBar.js":"8","D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\components\\Router.js":"9","D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\pages\\MoviePresentationPage.js":"10","D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\pages\\HomePage.js":"11","D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\js\\customStyles.js":"12","D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\components\\modal\\ModalWindow.js":"13","D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\js\\fakeData.js":"14","D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\components\\common\\CircularProgressBar.js":"15","D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\components\\movies\\list\\MoviesListLite.js":"16","D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\js\\customHooks.js":"17","D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\components\\modal\\ModalMovieTrailer.js":"18","D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\components\\video\\VideoPlayerWindow.js":"19","D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\components\\movies\\list\\SuggestedMoviesList.js":"20","D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\components\\common\\buttons\\TrailerButton.js":"21","D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\components\\common\\buttons\\BookmarkButton.js":"22","D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\components\\common\\buttons\\PlayButton.js":"23","D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\components\\movies\\list\\MoviesIntermediatePresentationList.js":"24","D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\components\\movies\\presentation\\MovieLitePresentation.js":"25","D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\components\\movies\\list\\MoviesListGenreLite.js":"26","D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\components\\movies\\presentation\\SuggestedMoviePresentation.js":"27","D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\components\\movies\\presentation\\MovieIntermediatePresentation.js":"28","D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\components\\common\\buttons\\BaseButton.js":"29","D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\components\\modal\\ModalLoadingMessage.js":"30","D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\components\\common\\buttons\\MoreButton.js":"31","D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\components\\video\\videoPlayerComponents\\VideoSubtitles.js":"32","D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\components\\video\\videoPlayerComponents\\TimeController.js":"33","D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\components\\common\\buttons\\DeleteButton.js":"34","D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\components\\video\\videoPlayerComponents\\Controls.js":"35","D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\components\\video\\videoPlayerComponents\\LeftControlsGroup.js":"36","D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\components\\video\\videoPlayerComponents\\Slider.js":"37","D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\components\\video\\videoPlayerComponents\\RightControlsGroup.js":"38","D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\components\\video\\videoPlayerComponents\\Options.js":"39","D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\pages\\LastSeenMoviesPage.js":"40","D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\pages\\SettingsPage.js":"41","D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\pages\\BookmarkedMoviesPage.js":"42","D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\pages\\MoviesListGenrePage.js":"43","D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\components\\modal\\ModalPlayWithVLCInstructions.js":"44","D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\components\\movies\\list\\TopNetflixMoviesList.js":"45","D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\components\\common\\buttons\\ApplyButton.js":"46","D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\components\\common\\buttons\\PlayWithVLCButton.js":"47","D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\components\\common\\buttons\\CopyButton.js":"48","D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\components\\video\\VideoPlayer.js":"49","D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\components\\common\\buttons\\PlayWithVLCButton.js":"50","D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\components\\common\\buttons\\BookmarkButton.js":"51","D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\components\\common\\buttons\\TrailerButton.js":"52","D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\components\\common\\buttons\\PlayButton.js":"53","D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\components\\common\\buttons\\BaseButton.js":"54"},{"size":517,"mtime":1642611122593,"results":"55","hashOfConfig":"56"},{"size":375,"mtime":1642611122613,"results":"57","hashOfConfig":"56"},{"size":5686,"mtime":1643730324529,"results":"58","hashOfConfig":"56"},{"size":7492,"mtime":1643730324579,"results":"59","hashOfConfig":"56"},{"size":1190,"mtime":1642611122547,"results":"60","hashOfConfig":"56"},{"size":316,"mtime":1642611122523,"results":"61","hashOfConfig":"56"},{"size":3491,"mtime":1642611122555,"results":"62","hashOfConfig":"56"},{"size":2091,"mtime":1643730324557,"results":"63","hashOfConfig":"56"},{"size":564,"mtime":1642611122521,"results":"64","hashOfConfig":"56"},{"size":9330,"mtime":1643730953471,"results":"65","hashOfConfig":"56"},{"size":1496,"mtime":1643730324584,"results":"66","hashOfConfig":"56"},{"size":305,"mtime":1642611122596,"results":"67","hashOfConfig":"56"},{"size":679,"mtime":1642611122556,"results":"68","hashOfConfig":"56"},{"size":22039,"mtime":1643730324577,"results":"69","hashOfConfig":"56"},{"size":1255,"mtime":1643730324532,"results":"70","hashOfConfig":"56"},{"size":3884,"mtime":1642611122563,"results":"71","hashOfConfig":"56"},{"size":680,"mtime":1642611122595,"results":"72","hashOfConfig":"56"},{"size":702,"mtime":1643730324534,"results":"73","hashOfConfig":"56"},{"size":3130,"mtime":1643730324563,"results":"74","hashOfConfig":"56"},{"size":2903,"mtime":1642611122564,"results":"75","hashOfConfig":"56"},{"size":551,"mtime":1642611122541,"results":"76","hashOfConfig":"56"},{"size":557,"mtime":1642611122530,"results":"77","hashOfConfig":"56"},{"size":458,"mtime":1643363110972,"results":"78","hashOfConfig":"56"},{"size":2648,"mtime":1643730324540,"results":"79","hashOfConfig":"56"},{"size":1561,"mtime":1643730324551,"results":"80","hashOfConfig":"56"},{"size":1055,"mtime":1643730324543,"results":"81","hashOfConfig":"56"},{"size":1535,"mtime":1643730324554,"results":"82","hashOfConfig":"56"},{"size":1524,"mtime":1643730324549,"results":"83","hashOfConfig":"56"},{"size":861,"mtime":1642611122528,"results":"84","hashOfConfig":"56"},{"size":841,"mtime":1642611122549,"results":"85","hashOfConfig":"56"},{"size":286,"mtime":1642611122535,"results":"86","hashOfConfig":"56"},{"size":1928,"mtime":1643730324574,"results":"87","hashOfConfig":"56"},{"size":3004,"mtime":1643705585735,"results":"88","hashOfConfig":"56"},{"size":542,"mtime":1642611122534,"results":"89","hashOfConfig":"56"},{"size":1473,"mtime":1643730324570,"results":"90","hashOfConfig":"56"},{"size":2340,"mtime":1643730324572,"results":"91","hashOfConfig":"56"},{"size":3042,"mtime":1643705585734,"results":"92","hashOfConfig":"56"},{"size":3297,"mtime":1643705585732,"results":"93","hashOfConfig":"56"},{"size":4542,"mtime":1643705585731,"results":"94","hashOfConfig":"56"},{"size":1434,"mtime":1643730324587,"results":"95","hashOfConfig":"56"},{"size":5228,"mtime":1643730324598,"results":"96","hashOfConfig":"56"},{"size":1933,"mtime":1643730324581,"results":"97","hashOfConfig":"56"},{"size":4596,"mtime":1643730324595,"results":"98","hashOfConfig":"56"},{"size":3711,"mtime":1643730324537,"results":"99","hashOfConfig":"56"},{"size":2486,"mtime":1643730324546,"results":"100","hashOfConfig":"56"},{"size":256,"mtime":1642611122526,"results":"101","hashOfConfig":"56"},{"size":478,"mtime":1642611122539,"results":"102","hashOfConfig":"56"},{"size":456,"mtime":1642611122532,"results":"103","hashOfConfig":"56"},{"size":9484,"mtime":1643730324559,"results":"104","hashOfConfig":"56"},{"size":478,"mtime":1642611122539,"results":"105","hashOfConfig":"56"},{"size":557,"mtime":1642611122530,"results":"106","hashOfConfig":"56"},{"size":551,"mtime":1642611122541,"results":"107","hashOfConfig":"56"},{"size":458,"mtime":1643363110972,"results":"108","hashOfConfig":"56"},{"size":861,"mtime":1642611122528,"results":"109","hashOfConfig":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},"oje8z3",{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"112"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"112"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"112"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"112"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"112"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"112"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"112"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"112"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"112"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"112"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"112"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"112"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"112"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"112"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"112"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"112"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"112"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\index.js",[],["238","239"],"D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\reportWebVitals.js",[],"D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\App.js",[],"D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\js\\moviesAPI.js",["240"],"import { movies } from \"./fakeData\";\r\nconst MoviesAPI = {\r\n    apiMoviesUrl: 'https://localhost:5001/movies/',\r\n    apiStreamUrl: 'https://localhost:5001/movies/stream?url=',\r\n    apiSubtitlesUrl: 'https://localhost:5001/subtitles',\r\n    apiServicesUrl: 'https://localhost:5001/services/',\r\n    apiLastSeenMoviesUrl: 'https://localhost:5001/movies/lastseenmovies/',\r\n    apiBookmarkedMoviesUrl: 'https://localhost:5001/movies/bookmarks/',\r\n    apiMovieDownloadStateUrl: 'https://localhost:5001/movies/streamdownloadstate/',\r\n\r\n\r\n    getMoviesGenres(onSuccess, onFail) {\r\n        var url = this.apiMoviesUrl + 'genres';\r\n        this.sendRequest(url, [], true, onSuccess, onFail);\r\n    },\r\n\r\n    getLastMoviesByGenre(genre, onSuccess, onFail) {\r\n        var url = this.apiMoviesUrl + 'genre/' + genre;\r\n        this.sendRequest(url, [], true, onSuccess, onFail);\r\n    },\r\n\r\n    getSuggestedMovies(onSuccess, onFail) {\r\n        var url = this.apiMoviesUrl + 'suggested'\r\n        this.sendRequest(url, [], true, onSuccess, onFail);\r\n    },\r\n\r\n    getMoviesByGenre(genre, page, onSuccess, onFail) {\r\n        var url = this.apiMoviesUrl + 'genre/' + genre + '/' + page;\r\n        this.sendRequest(url, [], true, onSuccess, onFail);\r\n    },\r\n    getMovieDetails(id, onSuccess, onFail) {\r\n        var url = this.apiMoviesUrl + 'details/' + id;\r\n        this.sendRequest(url, [], true, onSuccess, onFail);\r\n    },\r\n\r\n    searchMovies(text, onSuccess, onFail) {\r\n        var url = this.apiMoviesUrl + 'search/' + text\r\n        this.sendRequest(url, [], true, onSuccess, onFail);\r\n    },\r\n\r\n    getTopNetflixMovies(onSuccess, onFail) {\r\n        var url = this.apiMoviesUrl + 'topnetflix'\r\n        this.sendRequest(url, [], true, onSuccess, onFail);\r\n    },\r\n\r\n    searchVFSources(title, year, onSuccess, onFail){\r\n        var url = this.apiMoviesUrl + 'vf';\r\n        var parameters = [\r\n            {\r\n                name: 'title',\r\n                value: title\r\n            },\r\n            {\r\n                name: 'year',\r\n                value: year\r\n            }\r\n        ];\r\n\r\n        this.sendRequest(url, parameters, true, onSuccess, onFail);\r\n    },\r\n\r\n    getAvailableSubtitles(imdbId, onSuccess, onFail) {\r\n        var url = this.apiSubtitlesUrl + '/available/' + imdbId;\r\n        this.sendRequest(url, [], true, onSuccess, onFail);\r\n    },\r\n\r\n    getSubtitlesApiUrl(subtitlesSourceUrl){\r\n        return this.apiSubtitlesUrl + \"?sourceUrl=\" + subtitlesSourceUrl;\r\n    },\r\n\r\n    getActiveVOMovieService(onSuccess, onFail){\r\n        this.sendRequest(this.apiServicesUrl + \"vo/selected\", [], true, onSuccess, onFail);\r\n    },\r\n\r\n    getVOMovieServices(onSuccess, onFail){\r\n        this.sendRequest(this.apiServicesUrl + \"vo\", [], true, onSuccess, onFail);\r\n    },\r\n\r\n    selectVOMovieService(serviceId, onSuccess, onFail){\r\n        this.selectService(this.apiServicesUrl + \"vo\", serviceId, onSuccess, onFail);\r\n    },\r\n\r\n    getVFMovieServices(onSuccess, onFail){\r\n        this.sendRequest(this.apiServicesUrl + \"vf\", [], true, onSuccess, onFail);\r\n    },\r\n\r\n    selectVFMovieService(serviceId, onSuccess, onFail){\r\n        this.selectService(this.apiServicesUrl + \"vf\", serviceId, onSuccess, onFail);\r\n    },\r\n\r\n    getSubtitlesMovieServices(onSuccess, onFail){\r\n        this.sendRequest(this.apiServicesUrl + \"subtitles\", [], true, onSuccess, onFail);\r\n    },\r\n\r\n    selectSubtitlesMovieService(serviceId, onSuccess, onFail){\r\n        this.selectService(this.apiServicesUrl + \"subtitles\", serviceId, onSuccess, onFail);\r\n    },\r\n\r\n    selectService(serviceUrl, selectedServiceId, onSuccess, onFail) {\r\n        var xhttp = new XMLHttpRequest();\r\n        xhttp.onreadystatechange = function () {\r\n            if (this.readyState === 4) {\r\n                if (this.status === 200) {\r\n                    if (onSuccess)\r\n                        onSuccess();\r\n                }\r\n                else {\r\n                    if (onFail)\r\n                        onFail();\r\n                }\r\n            }\r\n        };\r\n        xhttp.open(\"POST\", serviceUrl, true);\r\n        xhttp.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n        xhttp.send(\"selectedServiceId=\" + selectedServiceId);\r\n    },\r\n\r\n    getLastSeenMovies(onSuccess, onFail) {\r\n        this.sendRequest(this.apiLastSeenMoviesUrl, [], true, onSuccess, onFail);\r\n    },\r\n\r\n    saveLastSeenMovie(movie) {\r\n        var xhttp = new XMLHttpRequest();\r\n        xhttp.open(\"PUT\", this.apiLastSeenMoviesUrl, true);\r\n        xhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        xhttp.send(JSON.stringify(movie));\r\n    },\r\n\r\n    getBookmarkedMovies(onSuccess, onFail){\r\n        this.sendRequest(this.apiBookmarkedMoviesUrl, [], true, onSuccess, onFail);\r\n    },\r\n\r\n    addBookmarkedMovie(movie, onSuccess) {\r\n        var xhttp = new XMLHttpRequest();\r\n        xhttp.open(\"PUT\", this.apiBookmarkedMoviesUrl, true);\r\n        xhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        xhttp.send(JSON.stringify(movie));\r\n\r\n        xhttp.onreadystatechange = function () {\r\n            if (this.readyState === 4) \r\n                if (this.status === 200) \r\n                    onSuccess();\r\n            }\r\n    },\r\n\r\n    deleteBookmarkedMovie(movieBookmark, onSuccess) {\r\n        var xhttp = new XMLHttpRequest();\r\n        xhttp.open(\"DELETE\", this.apiBookmarkedMoviesUrl, true);\r\n        xhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        xhttp.send(JSON.stringify(movieBookmark));\r\n\r\n        xhttp.onreadystatechange = function () {\r\n            if (this.readyState === 4) \r\n                if (this.status === 200) \r\n                    onSuccess();\r\n            }\r\n    },\r\n\r\n    isMovieBookmarked(movieId, serviceId, onSuccess, onFail){\r\n        var parameters = [\r\n            {\r\n                name: 'movieId',\r\n                value: movieId\r\n            },\r\n            {\r\n                name: 'serviceId',\r\n                value: serviceId\r\n            }\r\n        ];\r\n        this.sendRequest(this.apiBookmarkedMoviesUrl + 'exists', parameters, false, onSuccess, onFail);\r\n    },\r\n\r\n    getMovieDownloadState(streamUrl, onSuccess, onFail){\r\n        var parameters = [\r\n            {\r\n                name: 'torrentUrl',\r\n                value: streamUrl.replace(this.apiStreamUrl, '')\r\n            }\r\n        ];\r\n\r\n        this.sendRequest(this.apiMovieDownloadStateUrl, parameters, true, onSuccess, onFail);\r\n    },\r\n\r\n    sendRequest(url, parameters, deserializeResult, onSuccess, onFail) {\r\n        var xhttp = new XMLHttpRequest();\r\n        xhttp.onreadystatechange = function () {\r\n            if (this.readyState === 4) {\r\n                if (this.status === 200) {\r\n                    var result = deserializeResult ? JSON.parse(this.response) : this.response;\r\n                    if (onSuccess)\r\n                        onSuccess(result);\r\n                }\r\n                else {\r\n                    if (onFail)\r\n                        onFail();\r\n                }\r\n            }\r\n        };\r\n\r\n        if (parameters && parameters.length > 0) {\r\n            url += '?';\r\n            for (let i = 0; i < parameters.length; i++) {\r\n                const parameter = parameters[i];\r\n                url += parameter.name + '=' + parameter.value;\r\n                if (i !== parameters.length - 1)\r\n                    url += '&'\r\n            }\r\n        }\r\n\r\n        xhttp.open(\"GET\", url, true);\r\n        xhttp.send();\r\n    }\r\n}\r\n\r\nexport default MoviesAPI;","D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\components\\modal\\ModalListGenre.js",[],"D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\components\\SplashScreen.js",[],"D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\components\\modal\\ModalSearch.js",[],"D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\components\\navbar\\NavBar.js",["241","242","243"],"import \"../../style/nav-bar.css\";\r\nimport logo from '../../assets/medflix.png';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ViewModuleIcon from '@material-ui/icons/ViewModule';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport BookmarkIcon from '@material-ui/icons/Bookmark';\r\n\r\nimport { useState, useRef } from 'react';\r\n\r\nfunction NavBar({ onSearchClick, onHomeClick, onGenreMenuClick, onLastSeenMoviesClick, onBookmarkedMoviesClick, onSettingsClick }) {\r\n\r\n    const [showMovieServicesMenu, setShowMovieServicesMenu] = useState(false);\r\n    const movieServicesMenuRef = useRef(null);\r\n\r\n    const navBarIconStyle = {\r\n        color: 'white',\r\n        width: '30px',\r\n        height: '30px'\r\n    }\r\n\r\n    return (\r\n        <div className=\"nav-bar-container\">\r\n            <img className=\"nav-bar-logo\" alt=\"\" src={logo} />\r\n            <div className=\"nav-bar-right\">\r\n                <div className=\"nav-bar-btn\" onClick={() => onHomeClick()}>\r\n                    <HomeIcon style={navBarIconStyle} />\r\n                </div>\r\n                <div className=\"nav-bar-btn\" onClick={() => onLastSeenMoviesClick()}>\r\n                    <VisibilityIcon style={navBarIconStyle} />\r\n                </div>\r\n                <div className=\"nav-bar-btn\" onClick={() => onBookmarkedMoviesClick()}>\r\n                    <BookmarkIcon style={navBarIconStyle} />\r\n                </div>\r\n                <div className=\"nav-bar-btn\" onClick={() => onGenreMenuClick()}>\r\n                    <ViewModuleIcon style={navBarIconStyle} />\r\n                </div>\r\n                <div className=\"nav-bar-btn\" onClick={() => onSearchClick()}>\r\n                    <SearchIcon style={navBarIconStyle} />\r\n                </div>\r\n                <div className=\"nav-bar-btn\" onClick={() => onSettingsClick()}>\r\n                    <SettingsIcon style={navBarIconStyle} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default NavBar;","D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\components\\Router.js",[],"D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\pages\\MoviePresentationPage.js",["244","245"],"D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\pages\\HomePage.js",[],"D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\js\\customStyles.js",[],"D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\components\\modal\\ModalWindow.js",[],"D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\js\\fakeData.js",["246","247","248","249","250","251"],"\r\nconst testsubtitleOptions = [\r\n    {\r\n        label: 'Off',\r\n        selected: true,\r\n        data: {\r\n            url: \"\"\r\n        }\r\n    },\r\n    {\r\n        label: 'En',\r\n        selected: false,\r\n        subOptions: [\r\n\r\n            {\r\n                label: 'En 1',\r\n                selected: false,\r\n                data: {\r\n                    url: \"MoviesAPI.apiSubtitlesUrl\" + \"8199534\"\r\n                }\r\n            },\r\n            {\r\n                label: 'En 2',\r\n                selected: false,\r\n                data: {\r\n                    url: \"MoviesAPI.apiSubtitlesUrl\" + \"8199534\"\r\n                }\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        label: 'Fr',\r\n        selected: false,\r\n        subOptions: [\r\n\r\n            {\r\n                label: 'Fr 1',\r\n                selected: false,\r\n                data: {\r\n                    url: \"MoviesAPI.apiSubtitlesUrl\" + \"8199534\"\r\n                }\r\n            },\r\n            {\r\n                label: 'Fr 2',\r\n                selected: false,\r\n                data: {\r\n                    url: \"MoviesAPI.apiSubtitlesUrl\" + \"8199534\"\r\n                }\r\n            }\r\n        ]\r\n    }\r\n]\r\n\r\n\r\nconst videoQualities = [\r\n    {\r\n        label: '1080p',\r\n        selected: true,\r\n        data: {\r\n            url: 'https://cdn.fluidplayer.com/videos/valerian-1080p.mkv'\r\n        }\r\n    },\r\n    {\r\n        label: '720p',\r\n        selected: false,\r\n        data: {\r\n            url: 'https://www.learningcontainer.com/wp-content/uploads/2020/05/sample-mp4-file.mp4'\r\n        }\r\n    },\r\n];\r\n\r\nexport const movies = [{ \"title\": \"American Dream\", \"year\": \"2021\", \"genres\": \"Action, Crime, Drama, Thriller\", \"coverImageUrl\": \"https://yts.mx/assets/images/movies/american_dream_2021/medium-cover.jpg\", \"backgroundImageUrl\": \"https://yts.mx/assets/images/movies/american_dream_2021/background.jpg\", \"rating\": \"4,4\", \"torrents\": [{ \"downloadUrl\": \"https://yts.mx/torrent/download/A6DDD7ABFBD8BD1555EA411784D34D247A8844AB\", \"quality\": \"720p\" }, { \"downloadUrl\": \"https://yts.mx/torrent/download/0E45A0805F832EF08AE6CB7D4413341256977073\", \"quality\": \"1080p\" }], \"synopsis\": \"Entrepreneurs Scott and Nicky are desperate for cash to finish their construction project. They turn to Russian mobster Yuri, but after refusing the funding he offered them, Yuri gets revenge by trying to take over their project. The partners are terrified and have nowhere to turn for help, until Nicky's tough Russian girlfriend Ana decides to step in and help them.\", \"director\": null, \"cast\": \"\", \"youtubeTrailerUrl\": \"https://www.youtube.com/embed/qtBLRgpI_MA\", \"imdbCode\": \"tt1998389\", \"id\": \"25681\", \"duration\": \"1 h 23 min\" }, { \"title\": \"Irul\", \"year\": \"2021\", \"genres\": \"Mystery, Thriller\", \"coverImageUrl\": \"https://yts.mx/assets/images/movies/irul_2021/medium-cover.jpg\", \"backgroundImageUrl\": \"https://yts.mx/assets/images/movies/irul_2021/background.jpg\", \"rating\": \"6\", \"torrents\": [{ \"downloadUrl\": \"https://yts.mx/torrent/download/EDF5CBD0FFF7DE677F84289607CD0F958A4402D0\", \"quality\": \"720p\" }, { \"downloadUrl\": \"https://yts.mx/torrent/download/6D5FEC571DABA95DB2A121AB33AA5AF9E96B9386\", \"quality\": \"1080p\" }], \"synopsis\": \"A dark rainy night, an empty house, a stranded couple and an unknown man. A sleek game of the cat and the mouse starts playing on, as the three of them find a dead body in the basement.\", \"director\": null, \"cast\": \"\", \"youtubeTrailerUrl\": \"\", \"imdbCode\": \"tt13103212\", \"id\": \"29848\", \"duration\": \"1 h 31 min\" }, { \"title\": \"Cactus Jack\", \"year\": \"2021\", \"genres\": \"Drama, Horror, Thriller\", \"coverImageUrl\": \"https://yts.mx/assets/images/movies/cactus_jack_2021/medium-cover.jpg\", \"backgroundImageUrl\": \"https://yts.mx/assets/images/movies/cactus_jack_2021/background.jpg\", \"rating\": \"2,9\", \"torrents\": [{ \"downloadUrl\": \"https://yts.mx/torrent/download/E65E0BB48964F8E15BAC85AB2E11A98E98BA32C7\", \"quality\": \"720p\" }, { \"downloadUrl\": \"https://yts.mx/torrent/download/EA6985F43C0F30C182408503A43CB1AD95C6D08C\", \"quality\": \"1080p\" }], \"synopsis\": \"When an amateur documentarian sets out to make a film about a man who hasn't left his mother's basement in six months, he discovers the recluse is in fact a vile doomsday hatemonger. The tables are turned when the maniac snaps, imprisons him, and takes control of the cameras to start a vitriolic, venomous podcast-making enemies far and wide and promising violent retribution.\", \"director\": null, \"cast\": \"\", \"youtubeTrailerUrl\": \"https://www.youtube.com/embed/0HB7ZWzo5wU\", \"imdbCode\": \"tt9001474\", \"id\": \"26345\", \"duration\": \"1 h 20 min\" }, { \"title\": \"Todd\", \"year\": \"2021\", \"genres\": \"Drama, Mystery, Thriller\", \"coverImageUrl\": \"https://yts.mx/assets/images/movies/todd_2021/medium-cover.jpg\", \"backgroundImageUrl\": \"https://yts.mx/assets/images/movies/todd_2021/background.jpg\", \"rating\": \"5,3\", \"torrents\": [{ \"downloadUrl\": \"https://yts.mx/torrent/download/31C329E833640A99DCA1890E834B6873205D9913\", \"quality\": \"720p\" }, { \"downloadUrl\": \"https://yts.mx/torrent/download/DAEEEA29A57079232212F4B9BD385F71E5CBA901\", \"quality\": \"1080p\" }], \"synopsis\": \"Todd is the story of a man who has always felt like the \\\"odd man out.\\\" From a young age, Todd is shunned and ridiculed by his peers. Over time his pain and anger turns into rage and despair. When psychoanalysis and depression drugs don't work, the young eccentric becomes morbid and introverted, withdrawing from society in a downward spiral to insanity. He not only sets his sights on an aspiring young actress, but on his psychiatrist and the doctor's family too. \\\"TODD\\\" takes you on a nail biting, edge of your seat journey into the mind of a budding madman.\", \"director\": null, \"cast\": \"\", \"youtubeTrailerUrl\": \"\", \"imdbCode\": \"tt9412088\", \"id\": \"25840\", \"duration\": \"1 h 31 min\" }, { \"title\": \"Bastard's Crossing\", \"year\": \"2021\", \"genres\": \"Action, Thriller, Western\", \"coverImageUrl\": \"https://yts.mx/assets/images/movies/bastards_crossing_2021/medium-cover.jpg\", \"backgroundImageUrl\": \"https://yts.mx/assets/images/movies/bastards_crossing_2021/background.jpg\", \"rating\": \"3\", \"torrents\": [{ \"downloadUrl\": \"https://yts.mx/torrent/download/7A257D7A277BF2DAB2BD22C7D65A3478E018AC18\", \"quality\": \"720p\" }, { \"downloadUrl\": \"https://yts.mx/torrent/download/28DD1D56E36A96FA1BD2598244E72E285BD0C9EA\", \"quality\": \"1080p\" }], \"synopsis\": \"One of 12 Westerns in 12 Months produced during 2020, this film tells the story of Cam Talcutt, a man who won a trading post in a card game. Now, he's stuck in the wilderness trying to run it when he learns the freight company who supplies his store won't be coming anymore. Cam is in a bad spot and might have to do bad things to survive.\", \"director\": null, \"cast\": \"\", \"youtubeTrailerUrl\": \"https://www.youtube.com/embed/IaFxB4sVuMA\", \"imdbCode\": \"tt10556674\", \"id\": \"26929\", \"duration\": \"1 h 35 min\" }, { \"title\": \"Boss Level\", \"year\": \"2021\", \"genres\": \"Action, Mystery, Sci-Fi, Thriller\", \"coverImageUrl\": \"https://yts.mx/assets/images/movies/boss_level_2020/medium-cover.jpg\", \"backgroundImageUrl\": \"https://yts.mx/assets/images/movies/boss_level_2020/background.jpg\", \"rating\": \"6,9\", \"torrents\": [{ \"downloadUrl\": \"https://yts.mx/torrent/download/05328A1B83D243F90A471E531543FAC8CF300891\", \"quality\": \"720p\" }, { \"downloadUrl\": \"https://yts.mx/torrent/download/B8877B3E613C7FFFB48F267AA4BDBB5FBA73C8B8\", \"quality\": \"1080p\" }, { \"downloadUrl\": \"https://yts.mx/torrent/download/AE41DF2851CDC34C8D057DD58F2FBCF28AB51833\", \"quality\": \"720p\" }, { \"downloadUrl\": \"https://yts.mx/torrent/download/8B77A60B7281FEA9CE313634649C9A92B3F283FA\", \"quality\": \"1080p\" }], \"synopsis\": \"A retired Special Forces officer is trapped in a never-ending time loop on the day of his death.\", \"director\": null, \"cast\": \"\", \"youtubeTrailerUrl\": \"https://www.youtube.com/embed/CgZhk6uWGk4\", \"imdbCode\": \"tt7638348\", \"id\": \"24006\", \"duration\": \"1 h 34 min\" }, { \"title\": \"Below Zero\", \"year\": \"2021\", \"genres\": \"Action, Adventure, Crime, Drama, Thriller\", \"coverImageUrl\": \"https://yts.mx/assets/images/movies/below_zero_2021/medium-cover.jpg\", \"backgroundImageUrl\": \"https://yts.mx/assets/images/movies/below_zero_2021/background.jpg\", \"rating\": \"6,2\", \"torrents\": [{ \"downloadUrl\": \"https://yts.mx/torrent/download/175DBC2DB7D6AF26231D2D4CE6C574B1DB72E654\", \"quality\": \"720p\" }, { \"downloadUrl\": \"https://yts.mx/torrent/download/64B643AF2F5FE152198F2CC98F576799F040D4ED\", \"quality\": \"1080p\" }], \"synopsis\": \"On a lonely road, a prison transport is brutally assaulted. Martin, the policeman who was driving, survives and fortifies his position while the con men search for a way to finish him.\", \"director\": null, \"cast\": \"\", \"youtubeTrailerUrl\": \"https://www.youtube.com/embed/UCLz92vUYJY\", \"imdbCode\": \"tt9845564\", \"id\": \"26618\", \"duration\": \"1 h 46 min\" }, { \"title\": \"Ghost Light\", \"year\": \"2021\", \"genres\": \"Thriller\", \"coverImageUrl\": \"https://yts.mx/assets/images/movies/ghost_light_2021/medium-cover.jpg\", \"backgroundImageUrl\": \"https://yts.mx/assets/images/movies/ghost_light_2021/background.jpg\", \"rating\": \"2,6\", \"torrents\": [{ \"downloadUrl\": \"https://yts.mx/torrent/download/FC5ACFD60BAD333E7AC32153998091ECF0804096\", \"quality\": \"720p\" }, { \"downloadUrl\": \"https://yts.mx/torrent/download/2DDE2B71843FCE714469A9A480CC56FFED2C23DF\", \"quality\": \"1080p\" }], \"synopsis\": \"Opportunist and liar, Joseph Watkins, puts on a play at a theatre with a murderous past to impress, Virginia, an actor on the verge of leaving town. While evading two detectives and to the alarm of his stage manager, Joseph becomes obsessed with the spirit of the theatre and begins killing those who get in his way.\", \"director\": null, \"cast\": \"\", \"youtubeTrailerUrl\": \"\", \"imdbCode\": \"tt10969668\", \"id\": \"26496\", \"duration\": \"1 h 10 min\" }, { \"title\": \"COVID-21: Lethal Virus\", \"year\": \"2021\", \"genres\": \"Action, Drama, Sci-Fi, Thriller\", \"coverImageUrl\": \"https://yts.mx/assets/images/movies/covid_21_lethal_virus_2021/medium-cover.jpg\", \"backgroundImageUrl\": \"https://yts.mx/assets/images/movies/covid_21_lethal_virus_2021/background.jpg\", \"rating\": \"1,6\", \"torrents\": [{ \"downloadUrl\": \"https://yts.mx/torrent/download/8417D521F05FE900DACA3BFDD95690C9E8B447ED\", \"quality\": \"720p\" }, { \"downloadUrl\": \"https://yts.mx/torrent/download/82B4B5B997C38F4A682AA3100D0A8EA5D2CBE91F\", \"quality\": \"1080p\" }], \"synopsis\": \"The climate change has released an ancient rabies virus trapped in the Antarctica ice. A female scientist tries to get to the laboratory to create a cure to save the world, protected by an eccentric and two members of the special forces.\", \"director\": null, \"cast\": \"\", \"youtubeTrailerUrl\": \"https://www.youtube.com/embed/YEWiN3peZik\", \"imdbCode\": \"tt11246434\", \"id\": \"25658\", \"duration\": \"1 h 27 min\" }, { \"title\": \"Redemption Day\", \"year\": \"2021\", \"genres\": \"Action, Thriller\", \"coverImageUrl\": \"https://yts.mx/assets/images/movies/redemption_day_2021/medium-cover.jpg\", \"backgroundImageUrl\": \"https://yts.mx/assets/images/movies/redemption_day_2021/background.jpg\", \"rating\": \"4,7\", \"torrents\": [{ \"downloadUrl\": \"https://yts.mx/torrent/download/41FDABB72BBD2544269246FFE5A89AE21F1CACF7\", \"quality\": \"720p\" }, { \"downloadUrl\": \"https://yts.mx/torrent/download/1A4B0CF90981AF37FFFA21EFAE3F569F4594E11B\", \"quality\": \"1080p\" }, { \"downloadUrl\": \"https://yts.mx/torrent/download/06B311F7A643880D6366CDCBA1A3D230835A2197\", \"quality\": \"720p\" }, { \"downloadUrl\": \"https://yts.mx/torrent/download/8E27364C0327749048E2B25F2774B9F18C81E82C\", \"quality\": \"1080p\" }], \"synopsis\": \"When the love of his life is kidnapped and held for ransom by terrorists, a war hero Brad Paxton races against the clock to rescue her in a daring and deadly operation that pits him against the most powerful and shadowy forces.\", \"director\": null, \"cast\": \"\", \"youtubeTrailerUrl\": \"https://www.youtube.com/embed/TWjsU76dEIE\", \"imdbCode\": \"tt4439620\", \"id\": \"25970\", \"duration\": \"1 h 39 min\" }, { \"title\": \"Red Dot\", \"year\": \"2021\", \"genres\": \"Action, Drama, Horror, Thriller\", \"coverImageUrl\": \"https://yts.mx/assets/images/movies/red_dot_2021/medium-cover.jpg\", \"backgroundImageUrl\": \"https://yts.mx/assets/images/movies/red_dot_2021/background.jpg\", \"rating\": \"5,5\", \"torrents\": [{ \"downloadUrl\": \"https://yts.mx/torrent/download/8A260971A05CFE02CF5BEC39E8A92839B1D6AF67\", \"quality\": \"720p\" }, { \"downloadUrl\": \"https://yts.mx/torrent/download/00F28C53D38F8104EEFF0AF8F79E17E599066BE1\", \"quality\": \"1080p\" }], \"synopsis\": \"When Nadja becomes pregnant, they make an attempt to rekindle their relationship by traveling to the north of Sweden for a hiking trip but soon their romantic trip turns into a nightmare.\", \"director\": null, \"cast\": \"\", \"youtubeTrailerUrl\": \"https://www.youtube.com/embed/EHARitHyWKc\", \"imdbCode\": \"tt11307814\", \"id\": \"27258\", \"duration\": \"1 h 26 min\" }, { \"title\": \"Dead in the Water\", \"year\": \"2021\", \"genres\": \"Thriller\", \"coverImageUrl\": \"https://yts.mx/assets/images/movies/dead_in_the_water_2021/medium-cover.jpg\", \"backgroundImageUrl\": \"https://yts.mx/assets/images/movies/dead_in_the_water_2021/background.jpg\", \"rating\": \"5,2\", \"torrents\": [{ \"downloadUrl\": \"https://yts.mx/torrent/download/30E5D0E5CC8A29767BBD3BD10BEC53CF12C5E9C7\", \"quality\": \"720p\" }, { \"downloadUrl\": \"https://yts.mx/torrent/download/3410914252E1CAECDFB0B2AF2AE6587C85728A66\", \"quality\": \"1080p\" }], \"synopsis\": \"When aspiring photography vlogger Tara gets dumped by her long term boyfriend, her best friend Amy takes her on a weekend getaway to her family's vacation lake house where a mysterious and effortlessly attractive man crosses their path. They decide he's the perfect way to spice up their trip, but his presence causes emotions to run high, and suddenly the girls are forced to face the demons between themselves - or is it something more devious?\", \"director\": null, \"cast\": \"\", \"youtubeTrailerUrl\": \"https://www.youtube.com/embed/UDjBfkGYXGo\", \"imdbCode\": \"tt13081358\", \"id\": \"26101\", \"duration\": \"1 h 32 min\" }, { \"title\": \"The Conspiracy of Dark Falls\", \"year\": \"2021\", \"genres\": \"Action, Sci-Fi, Thriller\", \"coverImageUrl\": \"https://yts.mx/assets/images/movies/the_conspiracy_of_dark_falls_2020/medium-cover.jpg\", \"backgroundImageUrl\": \"https://yts.mx/assets/images/movies/the_conspiracy_of_dark_falls_2020/background.jpg\", \"rating\": \"0\", \"torrents\": [{ \"downloadUrl\": \"https://yts.mx/torrent/download/0D650FC81382566E9083E77586ABAA044EA680FD\", \"quality\": \"720p\" }, { \"downloadUrl\": \"https://yts.mx/torrent/download/4B96FCBB374D9C2DD32B9EB2F07A6C8C6C724E77\", \"quality\": \"1080p\" }], \"synopsis\": \"There are many small towns and villages hidden in the mountains, but only one hides a very dark secret. Nicholas Thorn is about to discover why people who ask too many questions in the town of Dark Falls don't stick around to find out the answers. Together with Agent Alex Fletcher the two embark on a mysterious journey to unravel the conspiracy that has taken over this town since the late eighties, but what they don't know is how deep the events of 1987 really go.\", \"director\": null, \"cast\": \"\", \"youtubeTrailerUrl\": \"\", \"imdbCode\": \"tt4027628\", \"id\": \"22903\", \"duration\": \"1 h 42 min\" }, { \"title\": \"Digging to Death\", \"year\": \"2021\", \"genres\": \"Horror, Thriller\", \"coverImageUrl\": \"https://yts.mx/assets/images/movies/digging_to_death_2021/medium-cover.jpg\", \"backgroundImageUrl\": \"https://yts.mx/assets/images/movies/digging_to_death_2021/background.jpg\", \"rating\": \"4,8\", \"torrents\": [{ \"downloadUrl\": \"https://yts.mx/torrent/download/573BFF20C44AF0C6B69B5311A567F039D6BE5931\", \"quality\": \"720p\" }, { \"downloadUrl\": \"https://yts.mx/torrent/download/4CCA10629FFC4BDBAA241965E593E9B3FD59BE3E\", \"quality\": \"1080p\" }], \"synopsis\": \"David Van Owen moves into a mysterious house and discovers a box buried in his backyard, filled with 3 million dollars and a fresh corpse. David hides the money in the house, only to be stalked by the buried body.\", \"director\": null, \"cast\": \"\", \"youtubeTrailerUrl\": \"\", \"imdbCode\": \"tt7752100\", \"id\": \"27554\", \"duration\": \"1 h 32 min\" }, { \"title\": \"Goodbye, Butterfly\", \"year\": \"2021\", \"genres\": \"Thriller\", \"coverImageUrl\": \"https://yts.mx/assets/images/movies/goodbye_butterfly_2021/medium-cover.jpg\", \"backgroundImageUrl\": \"https://yts.mx/assets/images/movies/goodbye_butterfly_2021/background.jpg\", \"rating\": \"4,8\", \"torrents\": [{ \"downloadUrl\": \"https://yts.mx/torrent/download/D7187E1A0EB5DA13786A37E908C3284706489ADA\", \"quality\": \"720p\" }, { \"downloadUrl\": \"https://yts.mx/torrent/download/C03BDDA3B88310BA4712128B95993E544737D8B3\", \"quality\": \"1080p\" }], \"synopsis\": \"After his five-year-old daughter is murdered, a loving family man becomes convinced that the oddball down the street is guilty.\", \"director\": null, \"cast\": \"\", \"youtubeTrailerUrl\": \"https://www.youtube.com/embed/f8Y0FYycDc0\", \"imdbCode\": \"tt11410238\", \"id\": \"26058\", \"duration\": \"1 h 38 min\" }, { \"title\": \"Crazy 2 Crazy\", \"year\": \"2021\", \"genres\": \"Crime, Horror, Thriller\", \"coverImageUrl\": \"https://yts.mx/assets/images/movies/crazy_2_crazy_2021/medium-cover.jpg\", \"backgroundImageUrl\": \"https://yts.mx/assets/images/movies/crazy_2_crazy_2021/background.jpg\", \"rating\": \"3,9\", \"torrents\": [{ \"downloadUrl\": \"https://yts.mx/torrent/download/11C044C368E8BC1333ABEF0B2D43F752434B63BB\", \"quality\": \"720p\" }, { \"downloadUrl\": \"https://yts.mx/torrent/download/357EBCBBB1ED41B2C2CAEADAD5FC0A4904917137\", \"quality\": \"1080p\" }, { \"downloadUrl\": \"https://yts.mx/torrent/download/6660B9351A2F56E0742E6757ADD799682F6F6787\", \"quality\": \"720p\" }, { \"downloadUrl\": \"https://yts.mx/torrent/download/B2422B687884125B7AC89D91CA31CF37A63F9ACB\", \"quality\": \"1080p\" }], \"synopsis\": \"What happens when a psychopath meets an all-American family of psychopaths? Meet Eugene, a psychotic low-life whose addictions include drugs, alcohol, and sex. When he finds his next fix, a beautiful real estate agent named Mary, he finds she's not what he expected. Eugene is about to find out sometimes crazy meets crazy.\", \"director\": null, \"cast\": \"\", \"youtubeTrailerUrl\": \"\", \"imdbCode\": \"tt8999492\", \"id\": \"26248\", \"duration\": \"1 h 32 min\" }, { \"title\": \"Fear of Rain\", \"year\": \"2021\", \"genres\": \"Drama, Horror, Thriller\", \"coverImageUrl\": \"https://yts.mx/assets/images/movies/fear_of_rain_2021/medium-cover.jpg\", \"backgroundImageUrl\": \"https://yts.mx/assets/images/movies/fear_of_rain_2021/background.jpg\", \"rating\": \"5,8\", \"torrents\": [{ \"downloadUrl\": \"https://yts.mx/torrent/download/0B784DD024317A44F07E06DA1E3448EEED3152D0\", \"quality\": \"720p\" }, { \"downloadUrl\": \"https://yts.mx/torrent/download/C77598F9B747A2F8959B2C099200DE91AA4D067E\", \"quality\": \"1080p\" }], \"synopsis\": \"A girl living with schizophrenia struggles with terrifying hallucinations as she begins to suspect her neighbor has kidnapped a child. The only person who believes her is Caleb -a boy she isn't even sure exists.\", \"director\": null, \"cast\": \"\", \"youtubeTrailerUrl\": \"https://www.youtube.com/embed/kUPf2z9KMmo\", \"imdbCode\": \"tt10037014\", \"id\": \"26969\", \"duration\": \"1 h 49 min\" }, { \"title\": \"Burn It All\", \"year\": \"2021\", \"genres\": \"Action, Thriller\", \"coverImageUrl\": \"https://yts.mx/assets/images/movies/burn_it_all_2021/medium-cover.jpg\", \"backgroundImageUrl\": \"https://yts.mx/assets/images/movies/burn_it_all_2021/background.jpg\", \"rating\": \"4,1\", \"torrents\": [{ \"downloadUrl\": \"https://yts.mx/torrent/download/B2E93D0106CC6B80F7A4A637B10E76C299FE90DE\", \"quality\": \"720p\" }, { \"downloadUrl\": \"https://yts.mx/torrent/download/7CEC5134434E73FDA94B945DC08B75AFED2070C8\", \"quality\": \"1080p\" }], \"synopsis\": \"With a history of men dominating her fate, a broken woman returns to her hometown to bury her mother only to find a violent organ smuggling ring already has the body and wants no witnesses, but by trying to extinguish her they spark an inferno.\", \"director\": null, \"cast\": \"\", \"youtubeTrailerUrl\": \"https://www.youtube.com/embed/huTb-hRJUv8\", \"imdbCode\": \"tt9139292\", \"id\": \"27590\", \"duration\": \"1 h 42 min\" }, { \"title\": \"Agent Revelation\", \"year\": \"2021\", \"genres\": \"Action, Sci-Fi, Thriller\", \"coverImageUrl\": \"https://yts.mx/assets/images/movies/agent_revelation_2021/medium-cover.jpg\", \"backgroundImageUrl\": \"https://yts.mx/assets/images/movies/agent_revelation_2021/background.jpg\", \"rating\": \"4,2\", \"torrents\": [{ \"downloadUrl\": \"https://yts.mx/torrent/download/5E9F4501B99F25BBEEEF6F530727517E37BED28C\", \"quality\": \"720p\" }, { \"downloadUrl\": \"https://yts.mx/torrent/download/1169E0A9D705C10B438A7D9F1D0731B42945847B\", \"quality\": \"1080p\" }], \"synopsis\": \"An ancient dust that controls humans is unleashed, but mysteriously affects Jim Yung who gains superpowers. Jim is taken to an underground base where he's trained to be an operative to take on an imminent alien threat and learn why aliens have returned to Earth.\", \"director\": null, \"cast\": \"\", \"youtubeTrailerUrl\": \"https://www.youtube.com/embed/ZWDRfZJK4DY\", \"imdbCode\": \"tt8955940\", \"id\": \"26344\", \"duration\": \"1 h 26 min\" }, { \"title\": \"Caged\", \"year\": \"2021\", \"genres\": \"Drama, Horror, Thriller\", \"coverImageUrl\": \"https://yts.mx/assets/images/movies/caged_2021/medium-cover.jpg\", \"backgroundImageUrl\": \"https://yts.mx/assets/images/movies/caged_2021/background.jpg\", \"rating\": \"3,5\", \"torrents\": [{ \"downloadUrl\": \"https://yts.mx/torrent/download/B1A13A53645770298CCE30CE166F35570B6E5028\", \"quality\": \"720p\" }, { \"downloadUrl\": \"https://yts.mx/torrent/download/ADFBEEC5994F898585F8BB30EAE57F4D5EA366AC\", \"quality\": \"1080p\" }], \"synopsis\": \"An affluent African American psychiatrist is sent to federal prison after being found guilty of murdering his wife, then sent to solitary confinement - a victim of systemic racism. Isolated and fighting for an appeal, he slowly descends into madness, pushed to his breaking point by an abusive female guard hell bent on her own form of justice. Haunted by internal demons and his dead wife, he questions his own innocence and sanity, making his time in the S.H.U. a never-ending nightmare.\", \"director\": null, \"cast\": \"\", \"youtubeTrailerUrl\": \"https://www.youtube.com/embed/08T1ObkO7O0\", \"imdbCode\": \"tt6173712\", \"id\": \"26479\", \"duration\": \"1 h 21 min\" }];","D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\components\\common\\CircularProgressBar.js",[],"D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\components\\movies\\list\\MoviesListLite.js",["252","253","254"],"import \"../../../style/movies-list.css\";\r\nimport \"../../../style/button.css\";\r\n\r\nimport MovieLitePresentation from \"../presentation/MovieLitePresentation\";\r\n\r\nimport ArrowForwardIosRounded from '@material-ui/icons/ArrowForwardIosRounded';\r\nimport ArrowBackIosRounded from '@material-ui/icons/ArrowBackIosRounded';\r\n\r\nimport fadeTransition from \"../../../js/customStyles.js\";\r\nimport { useEffect, useRef, useState } from 'react';\r\n\r\nfunction MoviesListLite({ movies, onMovieClick }) {\r\n  const listRef = useRef(null);\r\n  const [hideBackArrow, setHideBackArrow] = useState(true);\r\n  const [hideForwardArrow, setHideForwardArrow] = useState(false);\r\n\r\n  useEffect(() => {\r\n    listRef.current.onscroll = () => {\r\n      showHideNavArrows();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!movies || movies.length === 0) {\r\n      setHideForwardArrow(true);\r\n      setHideBackArrow(true);\r\n    }\r\n    else showHideNavArrows();\r\n  }, [movies]);\r\n\r\n  useEffect(()=>{ showHideNavArrows(); }, [hideBackArrow, hideForwardArrow]);\r\n\r\n  const isElementVisible = (elem, boundings) => {\r\n    const elemBoundings = elem.getBoundingClientRect();\r\n    return Math.floor(elemBoundings.right) <= Math.floor(boundings.right)\r\n      && Math.floor(elemBoundings.left) >= Math.floor(boundings.left);\r\n  }\r\n\r\n  const getVisibleRange = () => {\r\n    var indexes = []\r\n    var listBoundings = listRef.current.getBoundingClientRect();\r\n    for (let i = 0; i < listRef.current.children.length; i++) {\r\n      if (isElementVisible(listRef.current.children[i], listBoundings))\r\n        indexes.push(i);\r\n    }\r\n\r\n    return {\r\n      'maxIndex': Math.max(...indexes),\r\n      'minIndex': Math.min(...indexes),\r\n      'count': indexes.length\r\n    }\r\n  }\r\n\r\n  const navToRight = () => {\r\n    if (listRef.current.children && listRef.current.children.length > 0) {\r\n      var visibleRange = getVisibleRange();\r\n      var goToIndex = visibleRange.maxIndex + visibleRange.count;\r\n      var index = goToIndex > listRef.current.children.length - 1 ? listRef.current.children.length - 1 : goToIndex;\r\n\r\n      listRef.current.children[index].scrollIntoView({\r\n        behavior: 'smooth',\r\n        block: \"nearest\",\r\n        inline: \"nearest\"\r\n      });\r\n    }\r\n  }\r\n\r\n  const navToLeft = () => {\r\n    if (listRef.current.children && listRef.current.children.length > 0) {\r\n      var visibleRange = getVisibleRange();\r\n      var goToIndex = visibleRange.minIndex - visibleRange.count;\r\n      var index = goToIndex < 0 ? 0 : goToIndex;\r\n\r\n      listRef.current.children[index].scrollIntoView({\r\n        behavior: 'smooth',\r\n        block: \"nearest\",\r\n        inline: \"nearest\"\r\n      });\r\n    }\r\n  }\r\n\r\n  const showHideNavArrows = () => {\r\n    if (listRef.current.children && listRef.current.children.length > 0) {\r\n      var listBoundings = listRef.current.getBoundingClientRect();\r\n      setHideBackArrow(isElementVisible(listRef.current.children[0], listBoundings));\r\n      setHideForwardArrow(isElementVisible(listRef.current.children[listRef.current.children.length - 1], listBoundings));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={\"movies-list-container\"}>\r\n      <div style={fadeTransition(!hideBackArrow)} className=\"floating-navigation-btn left\" onClick={() => navToLeft()}>\r\n        <ArrowBackIosRounded style={{ fontSize: 40, color: 'white' }} />\r\n      </div>\r\n      <div style={fadeTransition(!hideForwardArrow)} className=\"floating-navigation-btn right\" onClick={() => navToRight()}>\r\n        <ArrowForwardIosRounded style={{ fontSize: 40, color: 'white' }} />\r\n      </div>\r\n      <div ref={listRef} className={\"movies-list\"+ (hideBackArrow && hideForwardArrow ? ' center' : '')}>\r\n        {movies.map((movie, index) => (<MovieLitePresentation key={index} movie={movie} hoverEffect={true} onMovieClick={(movieId)=>onMovieClick(movieId)}/>))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default MoviesListLite;","D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\js\\customHooks.js",[],"D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\components\\modal\\ModalMovieTrailer.js",["255"],"import ModalWindow from \"./ModalWindow\";\r\n\r\nfunction ModalMovieTrailer({visible, youtubeTrailerUrl, onCloseClick}){\r\n\r\n\r\n    const trailerStyle = {      \r\n            width: '800px',\r\n            height: '500px',\r\n            margin: 'auto 0',\r\n            backgroundColor: 'black',\r\n            border: 'none',\r\n            boxShadow: '1px 1px 14px 7px #101010c9'       \r\n    }\r\n\r\n    const content = () => {\r\n        return (\r\n            <iframe style={trailerStyle} src={visible ? youtubeTrailerUrl : ''}></iframe>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <ModalWindow visible={visible} content={content()} onCloseClick={() => onCloseClick()} />\r\n    );\r\n}\r\n\r\nexport default ModalMovieTrailer; ","D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\components\\video\\VideoPlayerWindow.js",[],"D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\components\\movies\\list\\SuggestedMoviesList.js",["256","257"],"\r\n\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\nimport SuggestedMovie from \"../presentation/SuggestedMoviePresentation\";\r\nimport MoviesAPI from \"../../../js/moviesAPI.js\";\r\nimport { useEffect, useState } from 'react';\r\n\r\nfunction SuggestedMovies({ onMoreClick, onDataLoaded }) {\r\n    const [movies, setMovies] = useState([]);\r\n    const [movieIndexVisible, setMovieIndexVisible] = useState(0);\r\n    const [suggestedMoviesPlay, setSuggestedMoviesPlay] = useState(true);\r\n\r\n    useEffect(() => {\r\n        MoviesAPI.getSuggestedMovies(\r\n            (suggestedMovies) => {\r\n                if (suggestedMovies && suggestedMovies.length > 0) {\r\n                    setMovies(suggestedMovies);\r\n                    onDataLoaded();\r\n                }\r\n            })\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        var changeMovie;\r\n        if (suggestedMoviesPlay) {\r\n            changeMovie = setTimeout(() => {\r\n                if (movieIndexVisible === movies.length - 1)\r\n                    setMovieIndexVisible(0)\r\n                else setMovieIndexVisible(movieIndexVisible + 1);\r\n            }, 5000);\r\n        }\r\n\r\n        return () => {\r\n            clearTimeout(changeMovie);\r\n        }\r\n    }, [movieIndexVisible, suggestedMoviesPlay]);\r\n\r\n\r\n    return (\r\n        <div className=\"suggested-movies-container\">\r\n            <div className=\"suggested-movies-nav-controls\">\r\n                <SuggestMovieNavigation \r\n                    nbMovies={movies?.length} \r\n                    selectedIndex={movieIndexVisible}\r\n                    onNavElementClick={(index)=>setMovieIndexVisible(index)}/>\r\n                <div className=\"suggested-movies-play-pause\" onClick={() => setSuggestedMoviesPlay(!suggestedMoviesPlay)}>\r\n                    <PlayArrowIcon className=\"icon\" style={{ display: suggestedMoviesPlay ? 'none' : '' }} />\r\n                    <PauseIcon className=\"icon\" style={{ display: !suggestedMoviesPlay ? 'none' : '' }} />\r\n                </div>\r\n            </div>\r\n           \r\n            {movies.map((movie, index) =>\r\n                <SuggestedMovie\r\n                    key={index}\r\n                    movie={movie}\r\n                    visible={index === movieIndexVisible}\r\n                    onMoreClick={() => onMoreClick(movie.id)} />)}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SuggestedMovies;\r\n\r\nfunction SuggestMovieNavigation({ nbMovies, selectedIndex, onNavElementClick }) {\r\n\r\n    const navElements = [];\r\n\r\n    for (let i = 0; i <= nbMovies -1; i++)  \r\n        navElements.push(i);\r\n\r\n    return (\r\n        <div className=\"suggested-movies-nav\">\r\n            {navElements.map((i)=>\r\n             <div   key={i} \r\n                    onClick={()=> onNavElementClick(i)}\r\n                    className={\"nav-elem\" + (selectedIndex === i ? ' selected' : '')}></div> )}\r\n        </div>\r\n    );\r\n}","D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\components\\common\\buttons\\TrailerButton.js",[],["258","259"],"D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\components\\common\\buttons\\BookmarkButton.js",[],"D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\components\\common\\buttons\\PlayButton.js",[],"D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\components\\movies\\list\\MoviesIntermediatePresentationList.js",[],"D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\components\\movies\\presentation\\MovieLitePresentation.js",[],"D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\components\\movies\\list\\MoviesListGenreLite.js",["260"],"import \"../../../style/movies-list.css\";\r\nimport MoviesAPI from \"../../../js/moviesAPI.js\";\r\nimport MoviesListLite from \"./MoviesListLite\";\r\nimport { useEffect, useState } from 'react';\r\nimport fadeTransition from \"../../../js/customStyles.js\";\r\n\r\nfunction MoviesListGenreLite({ genre, visible, onMovieClick}) {\r\n    const [movies, setMovies] = useState([]);\r\n\r\n    useEffect(() => {\r\n        MoviesAPI.getLastMoviesByGenre(genre,\r\n            (moviesOfGenre) => {\r\n                if (moviesOfGenre && moviesOfGenre.length > 0)\r\n                    setMovies(moviesOfGenre);\r\n            });\r\n    }, []);\r\n\r\n    return (\r\n        <div style={fadeTransition(movies && movies.length > 0  && visible, 1)} className=\"movies-list-genre-container\">\r\n            <div className=\"movies-list-header\">\r\n                <div className=\"movies-list-genre\">{genre} movies selection</div>\r\n            </div>\r\n            <MoviesListLite movies={movies} onMovieClick={(movieId)=>onMovieClick(movieId)}/>\r\n        </div>\r\n    );\r\n}\r\nexport default MoviesListGenreLite;","D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\components\\movies\\presentation\\SuggestedMoviePresentation.js",[],"D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\components\\movies\\presentation\\MovieIntermediatePresentation.js",["261"],"import \"../../../style/movie-intermediate-presentation.css\";\r\n\r\nimport MovieLitePresentation from \"./MovieLitePresentation\";\r\nimport PlayButton from \"../../common/buttons/PlayButton\";\r\nimport MoreButton from \"../../common/buttons/MoreButton\";\r\nimport DeleteButton from \"../../common/buttons/DeleteButton\";\r\n\r\nfunction MovieIntermediatePresentation({ movieBookmark, deleteButtonAvailable, onPlayClick, onMoreClick, onDeleteClick }) {\r\n    const truncateText = (text) =>{\r\n        if(text.length > 400) return text.substring(0, 300) + '...';\r\n        else return text;\r\n    };\r\n\r\n    return (\r\n        <div className=\"movie-intermediate-presentation-container\">\r\n            <MovieLitePresentation movie={movieBookmark.movie} />\r\n            <div className=\"movie-intermediate-presentation-content\">\r\n                <div className=\"movie-intermediate-presentation-info\">\r\n                    <div className=\"info\"><span className=\"info-title\">Service:</span> {movieBookmark.serviceName}</div>\r\n                    <div className=\"info\"><span className=\"info-title\">Synopsis:</span> {truncateText(movieBookmark.movie.synopsis)}</div>\r\n                </div>\r\n                <div className=\"movie-intermediate-presentation-actions\">\r\n                    <MoreButton onClick={() => onMoreClick()} color=\"grey\" />\r\n                    <DeleteButton onClick={() => onDeleteClick()} visible={deleteButtonAvailable}/>\r\n                </div>\r\n            </div>\r\n        </div>);\r\n}\r\n\r\nexport default MovieIntermediatePresentation;","D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\components\\common\\buttons\\BaseButton.js",[],"D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\components\\modal\\ModalLoadingMessage.js",[],"D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\components\\common\\buttons\\MoreButton.js",[],"D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\components\\video\\videoPlayerComponents\\VideoSubtitles.js",["262","263","264"],"import { useEffect, useState } from 'react';\r\n\r\nfunction VideoSubtitles({ videoCurrentTime, urlSource, size, subtitlesAdjustTime }) {\r\n    const [currentSubtitles, setCurrentSubtitles] = useState('');\r\n    const [subtitles, setSubtitles] = useState([]);\r\n    const [textItalic, setTextItalic] = useState(false);\r\n\r\n    const applySubtitles = (currentTime) => {\r\n        if (!subtitles || subtitles.length === 0)\r\n            return;\r\n        \r\n        var subtitle = subtitles.find(s =>\r\n            (s.startTime + subtitlesAdjustTime) <= currentTime && currentTime <= (s.endTime + subtitlesAdjustTime));\r\n\r\n        if (subtitle?.text) {\r\n            var text = subtitle.text;\r\n            setTextItalic(false);\r\n            if (text.includes('<i>') || text.includes('</i>')) {\r\n                setTextItalic(true);\r\n                text = text.replace('<i>', '').replace('</i>', '');\r\n            }\r\n            setCurrentSubtitles(text);\r\n        }\r\n        else setCurrentSubtitles('');\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (urlSource) {\r\n            var xhttp = new XMLHttpRequest();\r\n            xhttp.onreadystatechange = function () {\r\n                if (this.readyState == 4 && this.status == 200 && this.responseText) {\r\n                    setSubtitles(JSON.parse(this.response));\r\n                }\r\n            };\r\n            xhttp.open(\"GET\", urlSource, true);\r\n            xhttp.send();\r\n        }\r\n\r\n        return () => {\r\n            setSubtitles([]);\r\n            setCurrentSubtitles('');\r\n        }\r\n    }, [urlSource]);\r\n\r\n    useEffect(() => {\r\n        if(videoCurrentTime)\r\n            applySubtitles(videoCurrentTime);\r\n    }, [videoCurrentTime, subtitles, subtitlesAdjustTime]);\r\n\r\n    return (<div className=\"video-player-subtitles\"\r\n        style={{ fontSize: size + 'px', fontStyle: textItalic ? 'italic' : '' }}>\r\n        {currentSubtitles}\r\n    </div>);\r\n}\r\n\r\nexport default VideoSubtitles;","D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\components\\video\\videoPlayerComponents\\TimeController.js",["265"],"\r\nimport VideoPlayerSlider from './Slider';\r\n\r\nimport { useEffect, useState } from 'react';\r\n\r\nfunction TimeController({ videoDuration, videoCurrentTime, onTimeChanged }) {\r\n    const [videoCurrentTimeLabel, setVideoCurrentTimeLabel] = useState('00:00');\r\n    const [videoTotalTimeLabel, setVideoTotalTimeLabel] = useState('00:00');\r\n    const [currentPourcentageTimeVideo, setcurrentPourcentageTimeVideo] = useState(0);\r\n    const [tooltip, setTooltip] = useState(null);\r\n    const [totalTime, setTotalTime] = useState(0);\r\n\r\n    const getTimeLabel = (duration) => {\r\n        let hours = Math.floor(duration / 3600);\r\n        let minutes = Math.floor((duration - (hours * 3600)) / 60);\r\n        let seconds = Math.floor(duration - (hours * 3600) - (minutes * 60));\r\n\r\n        let hourValues = '';\r\n        if (hours > 0) {\r\n            hourValues = hours < 10 ? '0' + hours : hours;\r\n            hourValues += ':';\r\n        }\r\n        let minuteValue = minutes < 10 ? '0' + minutes : minutes;\r\n        let secondValue = seconds < 10 ? '0' + seconds : seconds;\r\n        return hourValues + minuteValue + ':' + secondValue;\r\n    };\r\n\r\n    const changeTimeVideo = (percentage) => {\r\n        if (totalTime && totalTime > 0) {\r\n            var newTime = Math.floor((percentage * totalTime) / 100)\r\n            setVideoCurrentTimeLabel(getTimeLabel(newTime));\r\n            onTimeChanged(newTime);\r\n        }\r\n    }\r\n\r\n    const updateTimeVideo = (time) => {\r\n        setVideoCurrentTimeLabel(getTimeLabel(time));\r\n        if(totalTime && totalTime > 0)\r\n            setcurrentPourcentageTimeVideo((time) * 100 / totalTime);\r\n        else\r\n            setcurrentPourcentageTimeVideo(0);\r\n    }\r\n\r\n    const setTimeControllerTooltip = (percentage) => {\r\n        if (totalTime && totalTime > 0) {\r\n            setTooltip({\r\n                text: getTimeLabel(Math.floor((percentage * totalTime) / 100)),\r\n                position: percentage\r\n            })\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (videoCurrentTime)\r\n            updateTimeVideo(videoCurrentTime);\r\n    }, [videoCurrentTime]);\r\n\r\n    useEffect(() => {\r\n        if (videoDuration){\r\n            setTotalTime(videoDuration);\r\n            setVideoTotalTimeLabel(getTimeLabel(videoDuration));\r\n        }\r\n        else\r\n            setTotalTime(0);\r\n            \r\n    }, [videoDuration]);\r\n\r\n    return (\r\n        <div className=\"video-time-controller-container\">\r\n            <div className=\"video-time-label\">{videoCurrentTimeLabel}</div>\r\n            <VideoPlayerSlider value={currentPourcentageTimeVideo}\r\n                onCursorEndMove={(percentage) => changeTimeVideo(percentage)}\r\n                onMouseOverSlider={(percentage) => setTimeControllerTooltip(percentage)}\r\n                tooltip={tooltip}\r\n                progressColor={'#ed0f0f'}\r\n                cursorColor={'#b59e9e'} />\r\n            <div className=\"video-time-label\">{videoTotalTimeLabel}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TimeController;","D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\components\\common\\buttons\\DeleteButton.js",[],"D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\components\\video\\videoPlayerComponents\\Controls.js",[],"D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\components\\video\\videoPlayerComponents\\LeftControlsGroup.js",["266"],"import PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\nimport VolumeUp from '@material-ui/icons/VolumeUp';\r\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\r\n\r\nimport Slider from './Slider';\r\n\r\nimport { useEffect, useState } from 'react';\r\n\r\nfunction LeftControlsGroup({ videoPaused, onPlayClick, onPauseClick, onVolumeChanged }) {\r\n    const [showPlayButton, setShowPlayButton] = useState(true);\r\n\r\n    const togglePlayButton = (play) => {\r\n        setShowPlayButton(!play);\r\n        if (play) onPlayClick();\r\n        else onPauseClick();\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (videoPaused) setShowPlayButton(true);\r\n    }, [videoPaused]);\r\n\r\n    return (\r\n        <div className=\"controls-group\">\r\n            <PlayArrowIcon className=\"icon\" style={{ display: showPlayButton ? '' : 'none' }} onClick={() => togglePlayButton(true)} />\r\n            <PauseIcon className=\"icon\" style={{ display: showPlayButton ? 'none' : '' }} onClick={() => togglePlayButton(false)} />\r\n            <VolumeController onVolumeChanged={(newVolume) => onVolumeChanged(newVolume)} />\r\n        </div>)\r\n}\r\n\r\nexport default LeftControlsGroup;\r\n\r\n\r\nfunction VolumeController({ onVolumeChanged }) {\r\n\r\n    const defaultVolume = 70;\r\n    const [currentVolume, setCurrentVolume] = useState(defaultVolume);\r\n    const [previousVolume, setPreviousVolume] = useState(defaultVolume);\r\n\r\n    const changeVolume = (percentage) => {\r\n        setCurrentVolume(percentage);\r\n        onVolumeChanged(percentage / 100);\r\n    };\r\n\r\n    const muteVideo = () => {\r\n        setPreviousVolume(currentVolume);\r\n        changeVolume(0);\r\n    }\r\n\r\n    useEffect(() => {\r\n        changeVolume(defaultVolume);\r\n    }, []);\r\n\r\n    return (<div className=\"video-volume-controller\">\r\n        <VolumeUp className=\"icon\" onClick={() => { muteVideo() }} style={{ display: currentVolume > 0 ? '' : 'none' }} />\r\n        <VolumeOffIcon className=\"icon\" onClick={() => changeVolume(previousVolume)} style={{ display: currentVolume > 0 ? 'none' : '' }} />\r\n        <Slider\r\n            value={currentVolume}\r\n            onCursorMoved={(percentage) => changeVolume(percentage)}\r\n            onCursorEndMove={(percentage) => changeVolume(percentage)}\r\n            width={'120px'}\r\n            height={'4px'} />\r\n    </div>)\r\n}\r\n","D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\components\\video\\videoPlayerComponents\\Slider.js",[],"D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\components\\video\\videoPlayerComponents\\RightControlsGroup.js",[],"D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\components\\video\\videoPlayerComponents\\Options.js",["267"],"import { useEffect, useState, useRef } from 'react';\r\nimport { useOnClickOutside } from '../../../js/customHooks';\r\n\r\nexport function VideoOptions({ options, icon, onOptionChanged }) {\r\n\r\n    const [menuOptions, setMenuOptions] = useState([]);\r\n    const [showMenu, setShowMenu] = useState(false);\r\n    const [optionsDisplay, setOptionsDisplay] = useState('');\r\n    const optionsWindowRef = useRef(null);\r\n\r\n    const updateMenuOptions = (selectedOption, selectedSubOption) => {\r\n\r\n        const oldSelectedOption = menuOptions.find(op => op.selected);\r\n        const oldSelectedSubOption = selectedOption?.subOptions?.find(subOp => subOp.selected);\r\n\r\n        if (selectedOption?.subOptions && !selectedSubOption)\r\n            return;\r\n\r\n        if (selectedOption?.subOptions\r\n            && oldSelectedSubOption?.label === selectedSubOption?.label)\r\n            return;\r\n\r\n        if (!selectedOption?.subOptions && oldSelectedOption?.label === selectedOption.label)\r\n            return;\r\n\r\n        var updatedOptions = [];\r\n        menuOptions.forEach(op => {\r\n            var updatedOption = {\r\n                label: op.label,\r\n                selected: op.label === selectedOption.label,\r\n                data: op.data\r\n            };\r\n            var updatedSubOptions = [];\r\n            if (op.subOptions) {\r\n                op.subOptions.forEach(subOp => {\r\n                    var updatedsubOption =\r\n                    {\r\n                        label: subOp.label,\r\n                        data: subOp.data,\r\n                        selected: subOp.label === selectedSubOption?.label\r\n                    }\r\n                    updatedSubOptions.push(updatedsubOption);\r\n                })\r\n                updatedOption.subOptions = updatedSubOptions;\r\n            }\r\n            updatedOptions.push(updatedOption);\r\n        });\r\n\r\n        setMenuOptions(updatedOptions);\r\n\r\n        setShowMenu(false);\r\n\r\n        var option = updatedOptions.find(op => op.selected);\r\n        if (option.subOptions) onOptionChanged(option.subOptions.find(subOp => subOp.selected));\r\n        else onOptionChanged(option);\r\n    }\r\n\r\n    const setSubOptionsVisibility = (option, visible) => {\r\n        var element = document.getElementById('suboption-' + option.label)\r\n        if (!element)\r\n            return;\r\n\r\n        if (visible) element.classList.remove(\"hidden\");\r\n        else element.classList.add(\"hidden\");\r\n    }\r\n\r\n    const getOptionsDisplay = (options) => {\r\n        return options.map(option =>\r\n        (<div key={option.label} className={\"option \" + (option.selected ? 'selected' : '')}\r\n            onClick={() => updateMenuOptions(option)}\r\n            onMouseOver={() => setSubOptionsVisibility(option, true)}\r\n            onMouseLeave={() => setSubOptionsVisibility(option, false)}>\r\n            {option.label}\r\n            {getSubOptionsDisplay(option)}\r\n        </div>))\r\n    }\r\n\r\n    const getSubOptionsDisplay = (option) => {\r\n        if (!option?.subOptions)\r\n            return null;\r\n        else {\r\n            return (\r\n                <div id={'suboption-' + option.label} className=\"video-options-menu suboptions hidden\">\r\n                    {option.subOptions.map(subOption =>\r\n                    (<div key={subOption.label} className={\"option \" + (subOption.selected ? 'selected' : '')}\r\n                        onClick={(event) => { updateMenuOptions(option, subOption); event.stopPropagation() }}>\r\n                        {subOption.label}\r\n                    </div>)\r\n                    )}\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (options) {\r\n            setMenuOptions(options);\r\n        }\r\n    }, [options]);\r\n\r\n    useEffect(() => {\r\n        if (menuOptions?.length && menuOptions.length > 0) {\r\n            setOptionsDisplay(getOptionsDisplay(menuOptions));\r\n        }\r\n    }, [menuOptions]);\r\n\r\n    useOnClickOutside(optionsWindowRef, () => setShowMenu(false));\r\n\r\n    return (\r\n        <div ref={optionsWindowRef} className=\"video-options-container\">\r\n            <div className={\"video-options-menu \" + (showMenu ? '' : 'hidden')}>\r\n                {optionsDisplay}\r\n            </div>\r\n            <VideoOptionsButton icon={icon} onClick={() => setShowMenu(!showMenu)} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport function VideoOptionsButton({ icon, hide, onClick }) {\r\n    return (\r\n        <div className=\"video-options-btn\" style={{ display: hide ? 'none' : '' }} onClick={() => onClick()}>\r\n            {icon}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\pages\\LastSeenMoviesPage.js",["268"],"import MoviesAPI from \"../js/moviesAPI.js\";\r\nimport MoviesIntermediatePresentationList from \"../components/movies/list/MoviesIntermediatePresentationList\";\r\nimport { useEffect, useState } from 'react';\r\n\r\nvar lastSeenMovieLastClicked = null;\r\n\r\nfunction LastSeenMoviesView({centerToLastClickedMovie, onMoreClick }) {\r\n\r\n    const [moviesBookmarks, setMoviesBookmarks] = useState([]);\r\n    const [loadingVisible, setLoadingVisible] = useState(true);\r\n\r\n    useEffect(() => {\r\n        if(!centerToLastClickedMovie)\r\n            lastSeenMovieLastClicked = null;\r\n\r\n        MoviesAPI.getLastSeenMovies((lastSeenMovies) => {\r\n            setLoadingVisible(false);\r\n            if (lastSeenMovies && lastSeenMovies.length > 0)\r\n                setMoviesBookmarks(lastSeenMovies);\r\n        }, () => {\r\n            setLoadingVisible(false);\r\n        });\r\n    }, []);\r\n\r\n    const handleMoreClick = (movieBookmark) => {\r\n        lastSeenMovieLastClicked = movieBookmark;\r\n        onMoreClick(movieBookmark.movie.id);\r\n    }\r\n\r\n    return (\r\n        <MoviesIntermediatePresentationList\r\n            title={\"You can see here the last movies you played\"}\r\n            loadingProgressVisible={loadingVisible}\r\n            moviesBookmarks={moviesBookmarks}\r\n            centerToMovieBookmark={lastSeenMovieLastClicked}\r\n            onMoreClick={(movieBookmark) => handleMoreClick(movieBookmark)} />\r\n    )\r\n}\r\n\r\n\r\nexport default LastSeenMoviesView;","D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\pages\\SettingsPage.js",["269"],"import \"../style/button.css\";\r\nimport \"../style/settings.css\";\r\nimport fadeTransition from \"../js/customStyles.js\";\r\n\r\nimport CircularProgressBar from \"../components/common/CircularProgressBar\";\r\nimport ApplyButton from \"../components/common/buttons/ApplyButton\";\r\nimport MoviesAPI from \"../js/moviesAPI\";\r\n\r\nimport { useEffect, useState } from 'react';\r\n\r\nfunction SettingsPage() {\r\n    const [loading, setLoading] = useState(true);\r\n    const [settingsSections, setSettingsSections] = useState([]);\r\n    const settingsSectionsResult = [];\r\n\r\n    const nbSections = 3;\r\n    let nbChangesApplied = 0;\r\n\r\n    useEffect(() => {\r\n        MoviesAPI.getVOMovieServices((services) => {\r\n            if (services?.length > 0) {\r\n                addSection('VO movies services', 'vo', services, 1);\r\n            }\r\n        });\r\n        MoviesAPI.getSubtitlesMovieServices((services) => {\r\n            if (services?.length > 0) {\r\n                addSection('Subtitles services', 'subs', services, 2);\r\n            }\r\n        });\r\n        MoviesAPI.getVFMovieServices((services) => {\r\n            if (services?.length > 0) {\r\n                addSection('VF movies services', 'vf', services, 3);\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    const addSection = (title, sectionId, services, order) => {\r\n        settingsSectionsResult.push(\r\n            {\r\n                title: title,\r\n                services: services,\r\n                order: order,\r\n                id: sectionId\r\n            }\r\n        );\r\n        if (settingsSectionsResult.length === nbSections) {\r\n            let sortedSections = [...settingsSectionsResult];\r\n            sortedSections.sort((a, b) => { return a.order - b.order })\r\n            setSettingsSections(sortedSections);\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const selectService = (serviceToSelect, settingsSectionId) => {\r\n        if (settingsSections && settingsSections.length > 0) {\r\n            var updatedSettingsSections = [...settingsSections];\r\n            var section = updatedSettingsSections.filter(s => s.id === settingsSectionId)[0];\r\n            var service = section.services.filter(s => s.id === serviceToSelect.id);\r\n\r\n            if (service && service.length === 1) {\r\n                section.services.forEach(s => { s.selected = false });\r\n                service[0].selected = true;\r\n                setSettingsSections(updatedSettingsSections);\r\n            }\r\n        }\r\n    };\r\n\r\n    const applyChanges = () => {\r\n        setLoading(true);\r\n        nbChangesApplied = 0;\r\n        setTimeout(() => {\r\n            settingsSections.forEach(section => {\r\n                if (section.id === \"vo\") {\r\n                    MoviesAPI.selectVOMovieService(section.services.filter(s => s.selected)[0].id, updateChangesApplied());\r\n                }\r\n                else if (section.id === \"vf\") {\r\n                    MoviesAPI.selectVFMovieService(section.services.filter(s => s.selected)[0].id, updateChangesApplied());\r\n                }\r\n                else if (section.id === \"subs\") {\r\n                    MoviesAPI.selectSubtitlesMovieService(section.services.filter(s => s.selected)[0].id, updateChangesApplied());\r\n                }\r\n            });\r\n        }, 1000);\r\n\r\n    };\r\n\r\n    const updateChangesApplied = () => {\r\n        nbChangesApplied++;\r\n        if (nbChangesApplied === nbSections)\r\n            setLoading(false);\r\n    }\r\n\r\n    return (\r\n        <div className=\"settings-container\">\r\n            <CircularProgressBar color={'white'} size={'80px'} position={\"center\"} visible={loading} />\r\n            <div style={fadeTransition(!loading)}>\r\n                {settingsSections.map((settingsSection) =>\r\n                    <ServicesSection\r\n                        key={settingsSection.id}\r\n                        sectionTitle={settingsSection.title}\r\n                        services={settingsSection.services}\r\n                        onClick={(service) => selectService(service, settingsSection.id)}\r\n                    />)}\r\n                <div className=\"footer\">\r\n                    <ApplyButton onClick={() => applyChanges()} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SettingsPage;\r\n\r\nfunction ServicesSection({ sectionTitle, services, onClick }) {\r\n    return (\r\n        <div className=\"section\">\r\n            <div className=\"title\">{sectionTitle}</div>\r\n            <div className=\"options\">{services.map((service, index) =>\r\n                <ThreeStatesButton\r\n                    key={index}\r\n                    title={service.description}\r\n                    available={service.available}\r\n                    selected={service.selected}\r\n                    onClick={() => onClick(service)} />)}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction ThreeStatesButton({ title, available, selected, onClick }) {\r\n    if (available)\r\n        return (<div className={\"standard-button \" + (selected ? \"red\" : \"grey\")} onClick={() => onClick()}>{title}</div>);\r\n    else\r\n        return (\r\n            <div className=\"unavailable\">\r\n                <div>{title}</div>\r\n                <div className=\"tooltip\">Service unavailable</div>\r\n            </div>\r\n        );\r\n}","D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\pages\\BookmarkedMoviesPage.js",["270"],"import MoviesAPI from \"../js/moviesAPI.js\";\r\nimport MoviesIntermediatePresentationList from \"../components/movies/list/MoviesIntermediatePresentationList\";\r\nimport { useEffect, useState } from 'react';\r\n\r\nvar bookmarkedMovieLastClicked = null;\r\n\r\nfunction BookmarkedMoviesView({ centerToLastClickedBookmark, onMoreClick }) {\r\n\r\n    const [moviesBookmarks, setMoviesBookmarks] = useState([]);\r\n    const [loadingVisible, setLoadingVisible] = useState(true);\r\n\r\n    useEffect(() => {\r\n        if(!centerToLastClickedBookmark)\r\n            bookmarkedMovieLastClicked = null;\r\n\r\n        MoviesAPI.getBookmarkedMovies((bookmarkedMovies) => {\r\n            setLoadingVisible(false);\r\n            if (bookmarkedMovies && bookmarkedMovies.length > 0)\r\n                setMoviesBookmarks(bookmarkedMovies);\r\n        }, () => {\r\n            setLoadingVisible(false);\r\n        });\r\n    }, []);\r\n\r\n    const deleteBookmark = (movieBookmark) => {\r\n        MoviesAPI.deleteBookmarkedMovie(movieBookmark, () => {\r\n            var newMovieBookmarksList = moviesBookmarks.filter(m => !(m.movie.id === movieBookmark.movie.id && m.serviceName === movieBookmark.serviceName));\r\n            setMoviesBookmarks(newMovieBookmarksList);\r\n        });\r\n    };\r\n\r\n    const handleMoreClick = (movieBookmark) => {\r\n        bookmarkedMovieLastClicked = movieBookmark;\r\n        onMoreClick(movieBookmark.movie.id);\r\n    }\r\n\r\n    return (\r\n        <MoviesIntermediatePresentationList\r\n            title={\"You can see here the movies you have bookmarked\"}\r\n            loadingProgressVisible={loadingVisible}\r\n            moviesBookmarks={moviesBookmarks}\r\n            showDeleteButton={true}\r\n            centerToMovieBookmark={bookmarkedMovieLastClicked}\r\n            onMoreClick={(movieBookmark) => handleMoreClick(movieBookmark)}\r\n            onDeleteClick={(movieBookmark) => deleteBookmark(movieBookmark)} />\r\n    )\r\n}\r\n\r\n\r\nexport default BookmarkedMoviesView;","D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\pages\\MoviesListGenrePage.js",["271","272","273"],"import \"../style/movie-lite-presentation.css\";\r\nimport \"../style/movies-list.css\";\r\nimport \"../style/button.css\";\r\n\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CircularProgressBar from \"../components/common/CircularProgressBar\";\r\n\r\nimport MovieLitePresentation from \"../components/movies/presentation/MovieLitePresentation\";\r\nimport MoviesAPI from \"../js/moviesAPI.js\";\r\n\r\nimport { useEffect, useState } from 'react';\r\n\r\nconst cache = {\r\n    update(genre, movies, pageIndex, elemId) {\r\n        this.genre = genre;\r\n        this.movies = movies;\r\n        this.pageIndex = pageIndex;\r\n        this.movieElementId = elemId;\r\n    },\r\n    get(genre) {\r\n        return this.genre === genre ?\r\n            {\r\n                movies: this.movies,\r\n                pageIndex: this.pageIndex,\r\n                movieElementId: this.movieElementId\r\n            }\r\n            : null;\r\n    },\r\n    clear() {\r\n        this.genre = '';\r\n        this.movies = null;\r\n    },\r\n    genre: '',\r\n    movies: null,\r\n    pageIndex: 0,\r\n    movieElementId: ''\r\n}\r\n\r\nfunction MoviesListGenrePage({ genre, loadFromCache, onMovieClick }) {\r\n\r\n    const [movies, setMovies] = useState([]);\r\n    const [pageIndex, setPageIndex] = useState(0);\r\n    const [searchInProgress, setSearchInProgress] = useState(false);\r\n\r\n    const addIconStyle = {\r\n        width: '60px',\r\n        height: '60px',\r\n        color: 'white',\r\n        margin: 'auto'\r\n    };\r\n\r\n    const performSearch = () => {\r\n        setSearchInProgress(true);\r\n        MoviesAPI.getMoviesByGenre(genre, pageIndex,\r\n            (moviesOfGenre) => {\r\n                setSearchInProgress(false);\r\n                if (moviesOfGenre && moviesOfGenre.length > 0) {\r\n                    if (pageIndex === 1) setMovies(moviesOfGenre);\r\n                    else setMovies(movies.concat(moviesOfGenre));\r\n                }\r\n            },\r\n            () => setSearchInProgress(false));\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        const cacheMovies = cache.get(genre);\r\n        if (loadFromCache && cacheMovies) \r\n            setPageIndex(cacheMovies.pageIndex);\r\n        else {           \r\n            setPageIndex(1); \r\n            if(pageIndex === 1) performSearch(); \r\n        }\r\n    }, [genre]);\r\n\r\n    useEffect(() => {\r\n        if (pageIndex > 0) {       \r\n            const cacheMovies = cache.get(genre);\r\n            if (cacheMovies) setMovies(cacheMovies.movies);\r\n            else performSearch();\r\n        }\r\n    }, [pageIndex]);\r\n\r\n    useEffect(() => {\r\n        if (movies && movies.length > 0) {\r\n            if (loadFromCache) {\r\n                const cacheMovies = cache.get(genre);\r\n                if (cacheMovies) {\r\n                    scrollToMovie(cacheMovies.movieElementId);\r\n                    cache.clear();\r\n                }\r\n            }\r\n            else if(pageIndex === 1)  scrollToMovie(\"movielite0\");\r\n        }\r\n    }, [movies]);\r\n\r\n    const scrollToMovie = (elemId) => {\r\n        var elem = document.getElementById(elemId);\r\n        if (elem) {\r\n            elem.scrollIntoView({\r\n                block: \"nearest\",\r\n                inline: \"nearest\"\r\n            });\r\n        }\r\n    }\r\n\r\n    const handleMovieClick = (movieId, elementId) => {\r\n        cache.update(genre, movies, pageIndex, elementId);\r\n        onMovieClick(movieId);\r\n    }\r\n\r\n    return (\r\n        <div className=\"movies-list-by-genre-container\">\r\n            <div className=\"movies-list-by-genre-header\">\r\n                <div className=\"movies-list-genre\">{genre}</div>\r\n                <CircularProgressBar size={'30px'} color={'white'} visible={searchInProgress} />\r\n            </div>\r\n            <div className=\"movies-list-container full\">\r\n                <div className=\"movies-list wrap-content\">\r\n                    {movies.map((movie, index) =>\r\n                    (<div id={\"movielite\" + index} key={index}>\r\n                        <MovieLitePresentation movie={movie} hoverEffect={true} onMovieClick={(movieId) => handleMovieClick(movieId, \"movielite\" + index)} />\r\n                    </div>))}\r\n                    <div className=\"movies-list-more\">\r\n                        <div className=\"round-btn grey\"\r\n                            style={{ visibility: !searchInProgress ? 'visible' : 'hidden' }}\r\n                            onClick={() => { if (!searchInProgress) setPageIndex(pageIndex + 1) }}>\r\n                            <AddIcon style={addIconStyle} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MoviesListGenrePage;","D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\components\\modal\\ModalPlayWithVLCInstructions.js",[],"D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\components\\movies\\list\\TopNetflixMoviesList.js",["274"],"import \"../../../style/movies-list.css\";\r\nimport MoviesAPI from \"../../../js/moviesAPI.js\";\r\nimport MoviesListLite from \"./MoviesListLite\";\r\nimport { useEffect, useState } from 'react';\r\nimport fadeTransition from \"../../../js/customStyles.js\";\r\n\r\nfunction TopNetflixMovies({ onMovieClick }) {\r\n    const [movies, setMovies] = useState([]);\r\n\r\n    useEffect(() => {\r\n        MoviesAPI.getTopNetflixMovies(\r\n            (movies) => {\r\n                if (movies && movies.length > 0)\r\n                    setMovies(movies);\r\n            });\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"movies-list-genre-container\">\r\n            <div className=\"movies-list-header\">\r\n                <div className=\"movies-list-genre\">Top Netflix movies</div>\r\n            </div>\r\n            <LoadingMovies visible={!movies || movies.length === 0} />\r\n            <div style={fadeTransition(movies && movies.length > 0, 1)} >\r\n                <MoviesListLite movies={movies} onMovieClick={(movieId)=>onMovieClick(movieId)}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default TopNetflixMovies;\r\n\r\nfunction LoadingMovies({visible}) {\r\n    const [loadingAnimationStyle, setLoadingAnimationStyle] = useState();\r\n\r\n    const maxOpacity = 0.6;\r\n    const minOpacity = 0.2;\r\n\r\n    const containerStyle = {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        marginLeft: '10px'\r\n    }\r\n\r\n    useEffect(() => {\r\n        performLoadingAnimation(maxOpacity);\r\n    }, []);\r\n\r\n    const performLoadingAnimation = (opacity) => {\r\n        const loadingMovieStyle = {\r\n            width: '150px',\r\n            height: '225px',\r\n            borderRadius: '5px',\r\n            backgroundColor: '#757575',\r\n            margin: '10px',\r\n            opacity: opacity,\r\n            transition: 'opacity 0.5s ease'\r\n        }\r\n\r\n        setLoadingAnimationStyle(loadingMovieStyle);\r\n            setTimeout(() => {\r\n                performLoadingAnimation(opacity === maxOpacity ? minOpacity : maxOpacity);\r\n            }, 500);\r\n        \r\n    }\r\n\r\n    if(visible){\r\n        return (<div style={containerStyle}>\r\n            <div style={loadingAnimationStyle}></div>\r\n            <div style={loadingAnimationStyle}></div>\r\n            <div style={loadingAnimationStyle}></div>\r\n            <div style={loadingAnimationStyle}></div>\r\n            <div style={loadingAnimationStyle}></div>\r\n            <div style={loadingAnimationStyle}></div>\r\n        </div>);\r\n    }\r\n    else return null;\r\n}","D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\components\\common\\buttons\\ApplyButton.js",[],"D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\components\\common\\buttons\\PlayWithVLCButton.js",[],"D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\components\\common\\buttons\\CopyButton.js",[],"D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\components\\video\\VideoPlayer.js",["275","276","277","278","279","280","281"],"import \"../../style/video-player.css\";\r\n\r\nimport CircularProgressBar from \"../common/CircularProgressBar\";\r\n\r\nimport VideoSubtitles from './videoPlayerComponents/VideoSubtitles';\r\nimport TimeController from './videoPlayerComponents/TimeController';\r\nimport Controls from './videoPlayerComponents/Controls';\r\n\r\nimport MoviesAPI from \"../../js/moviesAPI\";\r\n\r\nimport { useEffect, useState, useRef } from 'react';\r\n\r\nfunction VideoPlayer({ videoQualitiesOptions, videoSubtitlesOptions, mustPauseVideo }) {\r\n    const videoRef = useRef(null);\r\n    const videoPlayerContainerRef = useRef(null);\r\n\r\n    const [isFullScreen, setIsFullScreen] = useState(false);\r\n    const [currentTime, setCurrentTime] = useState(0);\r\n\r\n    const [errorMessage, setErrorMessage] = useState();\r\n\r\n    const checkDownloadStateRef = useRef(false);\r\n    const videoDownloadStateRef =  useRef('');\r\n\r\n    const [videoSource, setVideoSource] = useState('');\r\n    const [videoIsLoading, setVideoIsLoading] = useState(false);\r\n\r\n    const [subtitlesUrl, setSubtitlesUrl] = useState('');\r\n    const [subtitlesSize, setSubtitlesSize] = useState(30);\r\n    const [subtitlesAdjustTime, setSubtitlesAdjustTime] = useState(0);\r\n\r\n    const [showVideoControls, setShowVideoControls] = useState(false);\r\n    const lastTimeMouseMovedRef = useRef(0);\r\n\r\n    const checkMovieDownloadState = (url) => {\r\n        if (checkDownloadStateRef.current && videoRef.current) {       \r\n            MoviesAPI.getMovieDownloadState(url, (response) => {  \r\n                console.log(response);      \r\n                if(response.error) {\r\n                    checkDownloadStateRef.current = false;\r\n                    setErrorMessage(response.message);\r\n                }                \r\n                else{\r\n                    videoDownloadStateRef.current = response.message; \r\n                    setTimeout(() => {\r\n                        checkMovieDownloadState(url);\r\n                    }, 3000);\r\n                }\r\n              \r\n            })\r\n        }\r\n    };\r\n\r\n    const changeVideoSource = (url) => {       \r\n        var currentTime = videoRef.current.currentTime;\r\n        setVideoSource(url);\r\n\r\n        videoRef.current.autoplay = !videoRef.current.paused;\r\n        videoRef.current.load();\r\n       \r\n        videoRef.current.currentTime = currentTime;\r\n        setCurrentTime(currentTime);\r\n      \r\n        setVideoIsLoading(true);\r\n        checkDownloadStateRef.current = true;\r\n        setErrorMessage('');\r\n        checkMovieDownloadState(url);\r\n    }\r\n\r\n    const changeVideoTime = (newTime) =>{\r\n        videoRef.current.currentTime = newTime;\r\n    }\r\n\r\n    useEffect(() => {\r\n        const displayControls = () => {\r\n            setShowVideoControls(true);\r\n            lastTimeMouseMovedRef.current = Date.now();\r\n            const waitingTime = 3000;\r\n            setTimeout(() => {\r\n                if (videoPlayerContainerRef?.current && Date.now() > lastTimeMouseMovedRef.current + waitingTime)\r\n                    setShowVideoControls(false);\r\n            }, waitingTime + 500);\r\n        };\r\n        videoPlayerContainerRef.current.addEventListener(\"mousemove\", displayControls);\r\n\r\n        return () => {\r\n            if (videoPlayerContainerRef?.current) videoPlayerContainerRef.current.removeEventListener(\"mousemove\", displayControls);\r\n        }\r\n    }, [videoPlayerContainerRef]);\r\n\r\n    useEffect(() => {\r\n        const videoErrorHandler = (e) => {\r\n            if (videoRef?.current?.attributes.src.value) {\r\n                if(!errorMessage) setErrorMessage(\"An error occured\");\r\n                setVideoIsLoading(false);\r\n            }\r\n        }\r\n        videoRef.current.addEventListener('error', videoErrorHandler, true);\r\n\r\n        const onVideoPlaying = () => {        \r\n            checkDownloadStateRef.current = false;\r\n            videoDownloadStateRef.current = '';\r\n            console.log(\"onVideoPlaying\");\r\n            setVideoIsLoading(false);\r\n        };\r\n        videoRef.current.addEventListener('canplay', onVideoPlaying, true);\r\n        videoRef.current.addEventListener('playing', onVideoPlaying, true);\r\n\r\n        const onVideoWaiting = () => {     \r\n            setVideoIsLoading(true);\r\n        };\r\n        videoRef.current.addEventListener('waiting', onVideoWaiting, true);\r\n\r\n        return () => {\r\n            if (videoRef?.current) {\r\n                videoRef.current.removeEventListener(\"error\", videoErrorHandler);\r\n                videoRef.current.removeEventListener('playing', onVideoPlaying);\r\n                videoRef.current.removeEventListener('canplay', onVideoPlaying);\r\n                videoRef.current.removeEventListener('waiting', onVideoWaiting);\r\n            }\r\n        }\r\n    }, [videoRef]);\r\n\r\n    useEffect(() => {\r\n        const onTimeUpdated = () =>{\r\n            if (videoRef.current?.currentTime)\r\n                setCurrentTime(videoRef.current?.currentTime);\r\n        };\r\n\r\n        if (videoRef.current)\r\n            videoRef.current.addEventListener('timeupdate', onTimeUpdated);\r\n\r\n        return () => {\r\n            if (videoRef.current) videoRef.current.removeEventListener('timeupdate', onTimeUpdated);\r\n        }\r\n    }, [videoRef.current]);\r\n\r\n    useEffect(()=>{\r\n        const onFullScreenChange = (e) => {\r\n            setIsFullScreen(document.fullscreenElement);\r\n        };\r\n        if (videoPlayerContainerRef.current)\r\n            videoPlayerContainerRef.current.addEventListener('fullscreenchange', onFullScreenChange);\r\n\r\n        return () => {\r\n            if (videoPlayerContainerRef.current) videoPlayerContainerRef.current.removeEventListener('fullscreenchange', onFullScreenChange);\r\n        }\r\n    },[]);\r\n\r\n    useEffect(()=>{\r\n        if(mustPauseVideo) onPauseClick();\r\n    },[mustPauseVideo]);\r\n\r\n    useEffect(() => {\r\n        if (videoQualitiesOptions) {\r\n            const videoQuality = videoQualitiesOptions.find(op => op.selected);\r\n            if (videoQuality?.data?.url) changeVideoSource(videoQuality.data.url);\r\n        }\r\n    }, [videoQualitiesOptions]);\r\n\r\n    const onFullScreenStateChanged = (fullScreen) => {\r\n        if(fullScreen){\r\n            if (!videoPlayerContainerRef.current) return;\r\n\r\n            if (videoPlayerContainerRef.current.requestFullscreen) videoPlayerContainerRef.current.requestFullscreen();\r\n            else if (videoPlayerContainerRef.current.mozRequestFullScreen) videoPlayerContainerRef.current.mozRequestFullScreen();\r\n            else if (videoPlayerContainerRef.current.webkitRequestFullscreen) videoPlayerContainerRef.current.webkitRequestFullscreen();\r\n            else if (videoPlayerContainerRef.current.msRequestFullscreen) videoPlayerContainerRef.current.msRequestFullscreen();\r\n        }\r\n        else\r\n            document.exitFullscreen();     \r\n    }\r\n\r\n    const onPlayClick =()=>{\r\n        if(videoRef?.current)\r\n            videoRef.current.play();\r\n    }\r\n\r\n    const onPauseClick = ()=>{\r\n        if(videoRef?.current)\r\n            videoRef.current.pause();\r\n    }\r\n\r\n    const changeVideoVolume = (newVolume) => {\r\n        if(videoRef?.current)\r\n            videoRef.current.volume = newVolume;\r\n    }\r\n    \r\n\r\n    return (\r\n        <div ref={videoPlayerContainerRef} className=\"video-player-content\" >\r\n            <CircularProgressBar color={'white'} size={'80px'} position={\"center\"} visible={videoSource && videoIsLoading} text={videoDownloadStateRef.current} />\r\n            <div className=\"video-player-error-message\" style={{ display: errorMessage ? '' : 'none' }}>{errorMessage}</div>\r\n            <video ref={videoRef} className=\"video-player\" src={videoSource}></video>\r\n            <div className=\"video-player-bottom\">\r\n                <VideoSubtitles\r\n                    videoCurrentTime={currentTime}\r\n                    urlSource={subtitlesUrl}\r\n                    size={subtitlesSize}\r\n                    subtitlesAdjustTime={subtitlesAdjustTime} />\r\n                <div className=\"video-player-controls-container\" style={{ display: showVideoControls ? '' : 'none' }}>\r\n                    <TimeController \r\n                        videoDuration={videoRef.current?.duration}\r\n                        videoCurrentTime={currentTime}\r\n                        onTimeChanged={(newTime) => changeVideoTime(newTime)} />\r\n                    <Controls\r\n                        videoPaused={mustPauseVideo}\r\n                        onPlayClick={() => onPlayClick()}\r\n                        onPauseClick={() => onPauseClick()}\r\n                        onVolumeChanged={(newVolume)=> changeVideoVolume(newVolume)}\r\n                        videoSubtitlesOptions={videoSubtitlesOptions}\r\n                        videoQualitiesOptions={videoQualitiesOptions}\r\n                        onSubtitleSizeChange={(pixelsToAdd) => setSubtitlesSize(subtitlesSize + pixelsToAdd <= 60 && subtitlesSize + pixelsToAdd >= 20 ? subtitlesSize + pixelsToAdd : subtitlesSize)}\r\n                        onSubtitlesChange={(newUrlSource) => setSubtitlesUrl(newUrlSource ? newUrlSource : '')}\r\n                        onAdjustSubtitleTimeChange={(time) => setSubtitlesAdjustTime(time ? time : 0)}\r\n                        onVideoQualityChange={(newUrlSource) => changeVideoSource(newUrlSource)}\r\n                        isFullScreen={isFullScreen}\r\n                        onFullScreenStateChanged={(fullscreen) => onFullScreenStateChanged(fullscreen)} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default VideoPlayer;\r\n","D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\components\\common\\buttons\\PlayWithVLCButton.js",[],"D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\components\\common\\buttons\\BookmarkButton.js",[],"D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\components\\common\\buttons\\TrailerButton.js",[],"D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\components\\common\\buttons\\PlayButton.js",[],"D:\\Projets\\Streaming\\development\\Front\\react-streaming-client\\src\\components\\common\\buttons\\BaseButton.js",[],{"ruleId":"282","replacedBy":"283"},{"ruleId":"284","replacedBy":"285"},{"ruleId":"286","severity":1,"message":"287","line":1,"column":10,"nodeType":"288","messageId":"289","endLine":1,"endColumn":16},{"ruleId":"286","severity":1,"message":"290","line":14,"column":12,"nodeType":"288","messageId":"289","endLine":14,"endColumn":33},{"ruleId":"286","severity":1,"message":"291","line":14,"column":35,"nodeType":"288","messageId":"289","endLine":14,"endColumn":59},{"ruleId":"286","severity":1,"message":"292","line":15,"column":11,"nodeType":"288","messageId":"289","endLine":15,"endColumn":31},{"ruleId":"293","severity":1,"message":"294","line":96,"column":8,"nodeType":"295","endLine":96,"endColumn":25,"suggestions":"296"},{"ruleId":"297","severity":1,"message":"298","line":145,"column":21,"nodeType":"299","endLine":145,"endColumn":79},{"ruleId":"286","severity":1,"message":"300","line":2,"column":7,"nodeType":"288","messageId":"289","endLine":2,"endColumn":26},{"ruleId":"301","severity":1,"message":"302","line":19,"column":54,"nodeType":"303","messageId":"304","endLine":19,"endColumn":55},{"ruleId":"301","severity":1,"message":"302","line":26,"column":54,"nodeType":"303","messageId":"304","endLine":26,"endColumn":55},{"ruleId":"301","severity":1,"message":"302","line":40,"column":54,"nodeType":"303","messageId":"304","endLine":40,"endColumn":55},{"ruleId":"301","severity":1,"message":"302","line":47,"column":54,"nodeType":"303","messageId":"304","endLine":47,"endColumn":55},{"ruleId":"286","severity":1,"message":"305","line":55,"column":7,"nodeType":"288","messageId":"289","endLine":55,"endColumn":21},{"ruleId":"293","severity":1,"message":"306","line":21,"column":6,"nodeType":"295","endLine":21,"endColumn":8,"suggestions":"307"},{"ruleId":"293","severity":1,"message":"306","line":29,"column":6,"nodeType":"295","endLine":29,"endColumn":14,"suggestions":"308"},{"ruleId":"293","severity":1,"message":"306","line":31,"column":43,"nodeType":"295","endLine":31,"endColumn":76,"suggestions":"309"},{"ruleId":"310","severity":1,"message":"311","line":17,"column":13,"nodeType":"299","endLine":17,"endColumn":81},{"ruleId":"293","severity":1,"message":"312","line":22,"column":8,"nodeType":"295","endLine":22,"endColumn":10,"suggestions":"313"},{"ruleId":"293","severity":1,"message":"314","line":37,"column":8,"nodeType":"295","endLine":37,"endColumn":48,"suggestions":"315"},{"ruleId":"282","replacedBy":"316"},{"ruleId":"284","replacedBy":"317"},{"ruleId":"293","severity":1,"message":"318","line":16,"column":8,"nodeType":"295","endLine":16,"endColumn":10,"suggestions":"319"},{"ruleId":"286","severity":1,"message":"320","line":4,"column":8,"nodeType":"288","messageId":"289","endLine":4,"endColumn":18},{"ruleId":"321","severity":1,"message":"322","line":31,"column":37,"nodeType":"303","messageId":"323","endLine":31,"endColumn":39},{"ruleId":"321","severity":1,"message":"322","line":31,"column":57,"nodeType":"303","messageId":"323","endLine":31,"endColumn":59},{"ruleId":"293","severity":1,"message":"324","line":48,"column":8,"nodeType":"295","endLine":48,"endColumn":58,"suggestions":"325"},{"ruleId":"293","severity":1,"message":"326","line":56,"column":8,"nodeType":"295","endLine":56,"endColumn":26,"suggestions":"327"},{"ruleId":"293","severity":1,"message":"328","line":52,"column":8,"nodeType":"295","endLine":52,"endColumn":10,"suggestions":"329"},{"ruleId":"293","severity":1,"message":"330","line":105,"column":8,"nodeType":"295","endLine":105,"endColumn":21,"suggestions":"331"},{"ruleId":"293","severity":1,"message":"332","line":23,"column":8,"nodeType":"295","endLine":23,"endColumn":10,"suggestions":"333"},{"ruleId":"293","severity":1,"message":"334","line":35,"column":8,"nodeType":"295","endLine":35,"endColumn":10,"suggestions":"335"},{"ruleId":"293","severity":1,"message":"336","line":23,"column":8,"nodeType":"295","endLine":23,"endColumn":10,"suggestions":"337"},{"ruleId":"293","severity":1,"message":"338","line":74,"column":8,"nodeType":"295","endLine":74,"endColumn":15,"suggestions":"339"},{"ruleId":"293","severity":1,"message":"340","line":82,"column":8,"nodeType":"295","endLine":82,"endColumn":19,"suggestions":"341"},{"ruleId":"293","severity":1,"message":"342","line":95,"column":8,"nodeType":"295","endLine":95,"endColumn":16,"suggestions":"343"},{"ruleId":"293","severity":1,"message":"344","line":46,"column":8,"nodeType":"295","endLine":46,"endColumn":10,"suggestions":"345"},{"ruleId":"293","severity":1,"message":"346","line":87,"column":75,"nodeType":"288","endLine":87,"endColumn":82},{"ruleId":"293","severity":1,"message":"347","line":119,"column":26,"nodeType":"288","endLine":119,"endColumn":33},{"ruleId":"293","severity":1,"message":"348","line":122,"column":8,"nodeType":"295","endLine":122,"endColumn":18,"suggestions":"349"},{"ruleId":"293","severity":1,"message":"347","line":134,"column":44,"nodeType":"288","endLine":134,"endColumn":51},{"ruleId":"293","severity":1,"message":"350","line":136,"column":8,"nodeType":"295","endLine":136,"endColumn":26,"suggestions":"351"},{"ruleId":"293","severity":1,"message":"346","line":146,"column":74,"nodeType":"288","endLine":146,"endColumn":81},{"ruleId":"293","severity":1,"message":"352","line":159,"column":8,"nodeType":"295","endLine":159,"endColumn":31,"suggestions":"353"},"no-native-reassign",["354"],"no-negated-in-lhs",["355"],"no-unused-vars","'movies' is defined but never used.","Identifier","unusedVar","'showMovieServicesMenu' is assigned a value but never used.","'setShowMovieServicesMenu' is assigned a value but never used.","'movieServicesMenuRef' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'movieDetails'. Either include it or remove the dependency array.","ArrayExpression",["356"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'testsubtitleOptions' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'videoQualities' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'showHideNavArrows'. Either include it or remove the dependency array.",["357"],["358"],["359"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","React Hook useEffect has a missing dependency: 'onDataLoaded'. Either include it or remove the dependency array. If 'onDataLoaded' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["360"],"React Hook useEffect has a missing dependency: 'movies.length'. Either include it or remove the dependency array.",["361"],["354"],["355"],"React Hook useEffect has a missing dependency: 'genre'. Either include it or remove the dependency array.",["362"],"'PlayButton' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","unexpected","React Hook useEffect has a missing dependency: 'applySubtitles'. Either include it or remove the dependency array.",["363"],"React Hook useEffect has a missing dependency: 'updateTimeVideo'. Either include it or remove the dependency array.",["364"],"React Hook useEffect has a missing dependency: 'changeVolume'. Either include it or remove the dependency array.",["365"],"React Hook useEffect has a missing dependency: 'getOptionsDisplay'. Either include it or remove the dependency array.",["366"],"React Hook useEffect has a missing dependency: 'centerToLastClickedMovie'. Either include it or remove the dependency array.",["367"],"React Hook useEffect has a missing dependency: 'addSection'. Either include it or remove the dependency array.",["368"],"React Hook useEffect has a missing dependency: 'centerToLastClickedBookmark'. Either include it or remove the dependency array.",["369"],"React Hook useEffect has missing dependencies: 'loadFromCache', 'pageIndex', and 'performSearch'. Either include them or remove the dependency array.",["370"],"React Hook useEffect has missing dependencies: 'genre' and 'performSearch'. Either include them or remove the dependency array.",["371"],"React Hook useEffect has missing dependencies: 'genre', 'loadFromCache', and 'pageIndex'. Either include them or remove the dependency array.",["372"],"React Hook useEffect has a missing dependency: 'performLoadingAnimation'. Either include it or remove the dependency array.",["373"],"The ref value 'videoPlayerContainerRef.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'videoPlayerContainerRef.current' to a variable inside the effect, and use that variable in the cleanup function.","The ref value 'videoRef.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'videoRef.current' to a variable inside the effect, and use that variable in the cleanup function.","React Hook useEffect has a missing dependency: 'errorMessage'. Either include it or remove the dependency array.",["374"],"React Hook useEffect has an unnecessary dependency: 'videoRef.current'. Either exclude it or remove the dependency array. Mutable values like 'videoRef.current' aren't valid dependencies because mutating them doesn't re-render the component.",["375"],"React Hook useEffect has a missing dependency: 'changeVideoSource'. Either include it or remove the dependency array.",["376"],"no-global-assign","no-unsafe-negation",{"desc":"377","fix":"378"},{"desc":"379","fix":"380"},{"desc":"381","fix":"382"},{"desc":"383","fix":"384"},{"desc":"385","fix":"386"},{"desc":"387","fix":"388"},{"desc":"389","fix":"390"},{"desc":"391","fix":"392"},{"desc":"393","fix":"394"},{"desc":"395","fix":"396"},{"desc":"397","fix":"398"},{"desc":"399","fix":"400"},{"desc":"401","fix":"402"},{"desc":"403","fix":"404"},{"desc":"405","fix":"406"},{"desc":"407","fix":"408"},{"desc":"409","fix":"410"},{"desc":"411","fix":"412"},{"desc":"413","fix":"414"},{"desc":"415","fix":"416"},{"desc":"417","fix":"418"},"Update the dependencies array to be: [movieDetails, showMoviePlayer]",{"range":"419","text":"420"},"Update the dependencies array to be: [showHideNavArrows]",{"range":"421","text":"422"},"Update the dependencies array to be: [movies, showHideNavArrows]",{"range":"423","text":"424"},"Update the dependencies array to be: [hideBackArrow, hideForwardArrow, showHideNavArrows]",{"range":"425","text":"426"},"Update the dependencies array to be: [onDataLoaded]",{"range":"427","text":"428"},"Update the dependencies array to be: [movieIndexVisible, movies.length, suggestedMoviesPlay]",{"range":"429","text":"430"},"Update the dependencies array to be: [genre]",{"range":"431","text":"432"},"Update the dependencies array to be: [videoCurrentTime, subtitles, subtitlesAdjustTime, applySubtitles]",{"range":"433","text":"434"},"Update the dependencies array to be: [updateTimeVideo, videoCurrentTime]",{"range":"435","text":"436"},"Update the dependencies array to be: [changeVolume]",{"range":"437","text":"438"},"Update the dependencies array to be: [getOptionsDisplay, menuOptions]",{"range":"439","text":"440"},"Update the dependencies array to be: [centerToLastClickedMovie]",{"range":"441","text":"442"},"Update the dependencies array to be: [addSection]",{"range":"443","text":"444"},"Update the dependencies array to be: [centerToLastClickedBookmark]",{"range":"445","text":"446"},"Update the dependencies array to be: [genre, loadFromCache, pageIndex, performSearch]",{"range":"447","text":"448"},"Update the dependencies array to be: [genre, pageIndex, performSearch]",{"range":"449","text":"450"},"Update the dependencies array to be: [genre, loadFromCache, movies, pageIndex]",{"range":"451","text":"452"},"Update the dependencies array to be: [performLoadingAnimation]",{"range":"453","text":"454"},"Update the dependencies array to be: [errorMessage, videoRef]",{"range":"455","text":"456"},"Update the dependencies array to be: []",{"range":"457","text":"458"},"Update the dependencies array to be: [changeVideoSource, videoQualitiesOptions]",{"range":"459","text":"460"},[3895,3912],"[movieDetails, showMoviePlayer]",[751,753],"[showHideNavArrows]",[931,939],"[movies, showHideNavArrows]",[987,1020],"[hideBackArrow, hideForwardArrow, showHideNavArrows]",[834,836],"[onDataLoaded]",[1265,1305],"[movieIndexVisible, movies.length, suggestedMoviesPlay]",[601,603],"[genre]",[1659,1709],"[videoCurrentTime, subtitles, subtitlesAdjustTime, applySubtitles]",[2080,2098],"[updateTimeVideo, videoCurrentTime]",[1741,1743],"[changeVolume]",[3876,3889],"[getOptionsDisplay, menuOptions]",[854,856],"[centerToLastClickedMovie]",[1222,1224],"[addSection]",[877,879],"[centerToLastClickedBookmark]",[2224,2231],"[genre, loadFromCache, pageIndex, performSearch]",[2462,2473],"[genre, pageIndex, performSearch]",[2891,2899],"[genre, loadFromCache, movies, pageIndex]",[1475,1477],"[performLoadingAnimation]",[4720,4730],"[errorMessage, videoRef]",[5177,5195],"[]",[6017,6040],"[changeVideoSource, videoQualitiesOptions]"]