{"version":3,"sources":["assets/medflix.png","js/customStyles.js","js/moviesAPI.js","components/CircularProgressBar.js","components/MovieServicesMenu.js","js/customHooks.js","components/NavBar.js","components/SplashScreen.js","components/ModalWindow.js","components/MovieLitePresentation.js","components/MoviesListLite.js","components/ModalSearch.js","components/ModalListGenre.js","components/MoviesListGenreFull.js","components/VideoPlayer.js","components/VideoPlayerWindow.js","components/MovieFullPresentation.js","components/SuggestedMovie.js","components/SuggestedMovies.js","components/MoviesListGenreLite.js","components/LastMoviesLists.js","components/HomePage.js","components/Router.js","App.js","reportWebVitals.js","index.js"],"names":["fadeTransition","visible","speedTransition","visibility","opacity","transition","MoviesAPI","apiBaseUrl","apiSubtitlesUrl","apiStreamUrl","getMoviesGenres","onSuccess","onFail","url","this","sendRequest","getLastMoviesByGenre","genre","getSuggestedMovies","getMoviesByGenre","page","getMovieDetails","id","searchMovies","text","getAvailableSubtitles","imdbId","getAvailableMovieServices","changeMovieService","serviceName","xhttp","XMLHttpRequest","onreadystatechange","readyState","status","open","setRequestHeader","send","parameters","result","JSON","parse","response","length","i","parameter","name","value","CircularProgressBar","position","color","size","useState","positionStyle","setpositionStyle","useEffect","top","left","transform","style","CircularProgress","width","height","MovieServicesMenu","onClick","services","setServices","dataLoading","setDataLoading","console","log","handleServiceClick","window","location","reload","className","display","map","service","selected","useOnClickOutside","ref","handler","listener","event","current","contains","target","document","addEventListener","removeEventListener","NavBar","onSearchClick","onHomeClick","onGenreMenuClick","showMovieServicesMenu","setShowMovieServicesMenu","movieServicesMenuRef","useRef","navBarIconStyle","alt","src","logo","right","SplashScreen","ModalWindow","content","onCloseClick","MovieLitePresentation","maxLength","movie","onMovieClick","dataLoaded","setDataLoaded","setClicked","coverImageUrl","setTimeout","title","substring","justifyContent","year","rating","MoviesListLite","movies","listRef","hideBackArrow","setHideBackArrow","hideForwardArrow","setHideForwardArrow","onscroll","showHideNavArrows","isElementVisible","elem","boundings","elemBoundings","getBoundingClientRect","Math","floor","getVisibleRange","indexes","listBoundings","children","push","max","min","visibleRange","goToIndex","minIndex","count","index","scrollIntoView","behavior","block","inline","navToLeft","fontSize","maxIndex","navToRight","movieId","ModalSearch","searchValue","setSearchValue","setMovies","searchInProgress","setSearchInProgress","searchResultLabel","setSearchResultLabel","searchValueRef","TextField","onChange","e","disabled","placeholder","ModalListGenre","onGenreClick","genres","setGenres","loading","setLoading","cache","update","pageIndex","elemId","movieElementId","get","clear","MoviesListGenreFull","loadFromCache","setPageIndex","performSearch","moviesOfGenre","concat","cacheMovies","scrollToMovie","getElementById","handleMovieClick","elementId","margin","VideoPlayer","videoQualitiesOptions","videoSubtitlesOptions","videoRef","videoPlayerContainerRef","videoSource","setVideoSource","videoIsLoading","setVideoIsLoading","subtitlesUrl","setSubtitlesUrl","subtitlesSize","setSubtitlesSize","subtitlesAdjustTime","setSubtitlesAdjustTime","showVideoControls","setShowVideoControls","lastTimeMouseMovedRef","changeVideoSource","videoPlaying","paused","currentTime","load","play","displayControls","Date","now","waitingTime","videoQuality","find","op","data","type","VideoSubtitles","videoPlayer","urlSource","TimeController","LeftControlsGroup","RightControlsGroup","videoPlayerContainer","subtitlesOptions","qualityOptions","onSubtitleSizeChange","pixelsToAdd","onSubtitlesChange","newUrlSource","onAdjustSubtitleTimeChange","time","onVideoQualityChange","currentSubtitles","setCurrentSubtitles","subtitles","setSubtitles","applySubtitles","subtitle","s","startTime","endTime","responseText","videoIsPlaying","setVideoIsPlaying","onplay","onpause","pause","VolumeController","videoInFullscreen","setVideoInFullscreen","screenPlayer","setScreenPlayer","toggleVideoFullScreenInfo","AdjustSubtitleTimeOption","VideoOptions","options","icon","onOptionChanged","option","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","exitFullscreen","showMenu","setShowMenu","menuRef","step","valueAsNumber","videoCurrentTimeLabel","setVideoCurrentTimeLabel","videoTotalTimeLabel","setVideoTotalTimeLabel","currentPourcentageTimeVideo","setcurrentPourcentageTimeVideo","getTimeLabel","duration","hours","minutes","seconds","hourValues","updateTimeVideo","VideoPlayerSlider","onCursorMoved","percentage","changeTimeVideo","progressColor","cursorColor","currentVolume","setCurrentVolume","previousVolume","setPreviousVolume","changeVolume","volume","menuOptions","setMenuOptions","optionsDisplay","setOptionsDisplay","optionsWindowRef","updateMenuOptions","selectedOption","selectedSubOption","oldSelectedOption","oldSelectedSubOption","subOptions","subOp","label","updatedOptions","forEach","updatedOption","updatedSubOptions","updatedsubOption","setSubOptionsVisibility","element","classList","remove","add","getSubOptionsDisplay","subOption","stopPropagation","onMouseOver","onMouseLeave","getOptionsDisplay","cursorPosition","setCursorPosition","moveCursor","mouseXPosition","clientX","railRect","parentElement","endMove","backgroundColor","onMouseDown","VideoPlayerWindow","setSubtitlesOptions","setVideoQualitiesOptions","imdbCode","availableSubtitles","newSubtitlesOptions","sub","subtitlesOption","language","subtitlesIds","buildSubtitlesOptions","torrents","t","qualities","filter","o","startsWith","quality","downloadUrl","buildVideoQualitiesOptions","MovieFullPresentation","movieDetails","setMovieDetails","showMoviePlayer","setShowMoviePlayer","details","backgroundImage","backgroundImageUrl","youtubeTrailerUrl","q","indexOf","join","getVideoQualities","marginLeft","synopsis","director","cast","SuggestedMovie","onMoreClick","truncateText","SuggestedMovies","onDataLoaded","movieIndexVisible","setMovieIndexVisible","suggestedMoviesPlay","setSuggestedMoviesPlay","suggestedMovies","changeMovie","clearTimeout","SuggestMovieNavigation","nbMovies","selectedIndex","onNavElementClick","navElements","MoviesListGenreLite","LastMoviesLists","onShowGenreFullList","lastMoviesListRef","elementsVisible","setElementsVisible","containerBoundings","bottom","updateElementsVisibility","newElementsVisibility","overflowY","HomePage","Router","components","activeComponentId","activeComponent","setActiveComponent","component","c","render","App","moviesFullListGenre","setMoviesFullListGenre","loadFullListGenrefromCache","setLoadFullListGenrefromCache","splashscreenVisible","setSplashscreenVisible","modalSearchVisible","setModalSearchVisible","modalListGenresVisible","setModalListGenresVisible","setMovieId","showComponent","componentId","setRouterPreviousComponentId","routerActiveComponentId","setRouterActiveComponentId","showMoviesFullListofGenre","routerIds","moviesGenreFullList","showMovieFullPresentation","movieFullPresentation","homePage","router","routerPreviousComponentId","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.a995bf11.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/medflix.d071a10c.png\";","function fadeTransition(visible, speedTransition){\r\n\r\n    var speed = speedTransition ? speedTransition + 's' : '0.5s';\r\n    return {\r\n        visibility: visible ? 'visible' : 'hidden',\r\n        opacity: visible ? '1' : '0',\r\n        transition: \"all \" + speed\r\n    }\r\n}\r\n\r\nexport default fadeTransition;","const MoviesAPI = {\r\n    apiBaseUrl: 'https://localhost:5001/movies/',\r\n    apiSubtitlesUrl: 'https://localhost:5001/movies/subtitles/',\r\n    apiStreamUrl: 'https://localhost:5001/movies/stream?url=',\r\n\r\n\r\n    getMoviesGenres(onSuccess, onFail){\r\n        var url = this.apiBaseUrl + 'genres';\r\n        this.sendRequest(url, [], onSuccess, onFail);\r\n    },\r\n\r\n    getLastMoviesByGenre(genre, onSuccess, onFail) {\r\n        var url = this.apiBaseUrl + 'genre/' + genre;\r\n        this.sendRequest(url, [], onSuccess, onFail);\r\n    },\r\n\r\n    getSuggestedMovies(onSuccess, onFail) {\r\n        var url = this.apiBaseUrl + 'suggested'\r\n        this.sendRequest(url, [], onSuccess, onFail);\r\n    },\r\n\r\n    getMoviesByGenre(genre, page, onSuccess, onFail) {\r\n        var url = this.apiBaseUrl + 'genre/' + genre + '/' + page;\r\n        this.sendRequest(url, [], onSuccess, onFail);\r\n    },\r\n    getMovieDetails(id, onSuccess, onFail) {\r\n        var url = this.apiBaseUrl + 'details/' + id;\r\n        this.sendRequest(url, [], onSuccess, onFail);\r\n    },\r\n\r\n    searchMovies(text, onSuccess, onFail) {\r\n        var url = this.apiBaseUrl + 'search/' + text\r\n        this.sendRequest(url, [], onSuccess, onFail);\r\n    },\r\n\r\n    getAvailableSubtitles(imdbId, onSuccess, onFail){\r\n        var url = this.apiSubtitlesUrl + 'available/' + imdbId;\r\n        this.sendRequest(url, [], onSuccess, onFail);\r\n    },\r\n\r\n    getAvailableMovieServices(onSuccess, onFail){\r\n        var url = this.apiBaseUrl + 'services';\r\n        this.sendRequest(url, [], onSuccess, onFail);\r\n    },\r\n\r\n    changeMovieService(serviceName, onSuccess, onFail){\r\n        var xhttp = new XMLHttpRequest();\r\n        xhttp.onreadystatechange = function () {\r\n            if (this.readyState === 4) {\r\n                if (this.status === 200) {\r\n                    if (onSuccess)\r\n                        onSuccess();\r\n                }\r\n                else {\r\n                    if (onFail)\r\n                        onFail();\r\n                }\r\n            }\r\n        };\r\n        xhttp.open(\"POST\", this.apiBaseUrl + 'services', true);\r\n        xhttp.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n        xhttp.send(\"serviceName=\"+ serviceName);\r\n    },\r\n\r\n    sendRequest(url, parameters, onSuccess, onFail) {\r\n        var xhttp = new XMLHttpRequest();\r\n        xhttp.onreadystatechange = function () {\r\n            if (this.readyState === 4) {\r\n                if (this.status === 200) {\r\n                    var result = JSON.parse(this.response);\r\n                    if (onSuccess)\r\n                        onSuccess(result);\r\n                }\r\n                else {\r\n                    if (onFail)\r\n                        onFail();\r\n                }\r\n            }\r\n        };\r\n\r\n        if (parameters && parameters.length > 0) {\r\n            url += '?';\r\n            for (let i = 0; i < parameters.length; i++) {\r\n                const parameter = parameters[i];\r\n                url += parameter.name + '=' + parameter.value;\r\n                if (i !== parameters.length - 1)\r\n                    url += '&'\r\n            }\r\n        }\r\n\r\n        xhttp.open(\"GET\", url, true);\r\n        xhttp.send();\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default MoviesAPI;","import CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { useEffect, useState } from 'react';\r\nimport fadeTransition from \"../js/customStyles.js\";\r\n\r\nfunction CircularProgressBar({ position, color, size, visible }) {\r\n\r\n    const [positionStyle, setpositionStyle] = useState({});\r\n    useEffect(() => {\r\n        if (position === 'center') {\r\n            setpositionStyle({\r\n                position: 'fixed',\r\n                top: '50%',\r\n                left: '50%',\r\n                transform: 'translate(-50%, -50%)'\r\n            })\r\n        }\r\n    }, [position]);\r\n\r\n    return (\r\n        <div style={fadeTransition(visible)}>\r\n            <div style={positionStyle}>\r\n                <CircularProgress style={{ color: color, width: size, height: 'auto' }} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CircularProgressBar;","\r\nimport \"../style/movie-services-menu.css\";\r\n\r\nimport fadeTransition from \"../js/customStyles.js\";\r\nimport MoviesAPI from \"../js/moviesAPI.js\";\r\n\r\nimport CircularProgressBar from \"./CircularProgressBar\";\r\nimport { useEffect, useState } from 'react';\r\n\r\n\r\nfunction MovieServicesMenu({onClick, visible }) {\r\n    \r\n    const [services, setServices] = useState([]);\r\n    const [dataLoading, setDataLoading] = useState(true);\r\n\r\n    useEffect(()=>{\r\n        if(visible){\r\n            MoviesAPI.getAvailableMovieServices(\r\n                (services) => {\r\n                    setDataLoading(false);\r\n                    if (services && services.length > 0)\r\n                        setServices(services);\r\n                },\r\n                () => console.log('fail'));\r\n        }\r\n    },[visible]);\r\n\r\n    const handleServiceClick= (serviceName)=>{\r\n        setDataLoading(true);\r\n        MoviesAPI.changeMovieService(serviceName,\r\n            ()=> {window.location.reload()},\r\n            () => console.log('fail'));\r\n        onClick();\r\n    }\r\n    \r\n    return (\r\n        <div style={fadeTransition(visible)} className=\"movie-services-menu-container\">    \r\n            <div style={{display: dataLoading ?  '': 'none'}}>\r\n                <CircularProgressBar color={'white'} size={'40px'} visible={true}/>      \r\n            </div>          \r\n           <div style={{display: !dataLoading ? '': 'none'}}>\r\n                {services.map(service => (\r\n                     <div \r\n                        key={service.name} \r\n                        className={\"movie-service\" + (service.selected ? \" selected\" : \"\")}\r\n                        onClick={()=> handleServiceClick(service.name)}>\r\n                        {service.name}\r\n                    </div>)\r\n               )}\r\n           </div>\r\n        </div>\r\n    );\r\n}\r\nexport default MovieServicesMenu;\r\n\r\n// setTimeout(()=>{\r\n//     setServices([\r\n//         {\r\n//             name: \"YtsAPIMtx\",\r\n//             selected: true\r\n//         },\r\n//         {\r\n//             name: \"YtsHtmlone\",\r\n//             selected: false\r\n//         },\r\n//         {\r\n//             name: \"YtsHtmlltd\",\r\n//             selected: false\r\n//         }\r\n//     ]);\r\n// },3000);","\r\nimport { useEffect } from 'react';\r\n// Hook\r\nfunction useOnClickOutside(ref, handler) {\r\n    useEffect(\r\n      () => {\r\n        const listener = event => {\r\n          if (!ref.current || ref.current.contains(event.target)) {\r\n            return;\r\n          }\r\n          handler(event);         \r\n        };\r\n  \r\n        document.addEventListener('mousedown', listener);\r\n        document.addEventListener('touchstart', listener);\r\n  \r\n        return () => {\r\n          document.removeEventListener('mousedown', listener);\r\n          document.removeEventListener('touchstart', listener);\r\n        };\r\n      },\r\n      [ref, handler]\r\n    );\r\n  }\r\n\r\n  export { useOnClickOutside };","import \"../style/nav-bar.css\";\r\nimport logo from '../assets/medflix.png';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ViewModuleIcon from '@material-ui/icons/ViewModule';\r\n\r\nimport MovieServicesMenu from './MovieServicesMenu';\r\n\r\nimport {  useState, useRef } from 'react';\r\nimport { useOnClickOutside } from '../js/customHooks';\r\n\r\nfunction NavBar({ onSearchClick, onHomeClick, onGenreMenuClick }) {\r\n\r\n    const [showMovieServicesMenu, setShowMovieServicesMenu] = useState(false);\r\n    const movieServicesMenuRef = useRef(null);\r\n\r\n    const navBarIconStyle = {\r\n        color: 'white',\r\n        width: '30px',\r\n        height: '30px'\r\n    }\r\n\r\n    useOnClickOutside(movieServicesMenuRef, () => setShowMovieServicesMenu(false));\r\n\r\n    return (\r\n        <div className=\"nav-bar-container\">\r\n            <img className=\"nav-bar-logo\" alt=\"\" src={logo} />\r\n            <div className=\"nav-bar-right\">\r\n                <div className=\"nav-bar-btn\" onClick={() => onHomeClick()}>\r\n                    <HomeIcon style={navBarIconStyle} />\r\n                </div>\r\n                <div className=\"nav-bar-btn\" onClick={() => onGenreMenuClick()}>\r\n                    <ViewModuleIcon style={navBarIconStyle} />\r\n                </div>\r\n                <div className=\"nav-bar-btn\" onClick={() => onSearchClick()}>\r\n                    <SearchIcon style={navBarIconStyle} />\r\n                </div>\r\n                <div ref={movieServicesMenuRef} style={{position: 'relative'}}>\r\n                    <div className=\"nav-bar-btn\" onClick={() => setShowMovieServicesMenu(!showMovieServicesMenu)}>\r\n                        <SettingsIcon style={navBarIconStyle} />\r\n                    </div>\r\n                    <div  style={{position: 'absolute', top: '100%', right: '0'}}>\r\n                        <MovieServicesMenu visible={showMovieServicesMenu} onClick={() => setShowMovieServicesMenu(false)}/>\r\n                    </div>                   \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default NavBar;","\r\nimport \"../style/splashscreen.css\";\r\nimport logo from '../assets/medflix.png';\r\n\r\nfunction SplashScreen({visible}) {\r\n    \r\n    return (\r\n        <div className={\"splash-screen-container\" + (visible ? '' : ' hidden')}>\r\n           <img alt=\"\" src={logo} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SplashScreen;","import \"../style/modal-window.css\";\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport fadeTransition from \"../js/customStyles.js\";\r\n\r\nfunction ModalWindow({visible, content, onCloseClick}){\r\n\r\n    return (\r\n        <div style={fadeTransition(visible)} className=\"modal-window-container\">\r\n        <div className=\"modal-window-content\">\r\n            <div className=\"modal-window-close-btn\" onClick={() => onCloseClick()}>\r\n                <ClearIcon className=\"close-cross\" />\r\n            </div>\r\n            {content}\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default ModalWindow;","\r\nimport \"../style/movie-lite-presentation.css\";\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport fadeTransition from \"../js/customStyles.js\";\r\n\r\nfunction MovieLitePresentation({ movie, onMovieClick }) {\r\n    const [dataLoaded, setDataLoaded] = useState(false);\r\n    const [clicked, setClicked] = useState(false);\r\n\r\n    const truncate = (text, maxLength) => {\r\n\r\n        if (text && text.length > maxLength)\r\n            return text.substring(0, maxLength) + '...';\r\n        else return text;\r\n    }\r\n\r\n    useEffect(() => {\r\n        setDataLoaded(movie?.coverImageUrl);\r\n    }, [movie]);\r\n\r\n    const handleClick = () => {\r\n        setClicked(true);\r\n        setTimeout(()=>{\r\n            \r\n            onMovieClick(movie?.id);\r\n        }, 150);\r\n        \r\n    }\r\n\r\n    return (\r\n        <div style={fadeTransition(dataLoaded)}>\r\n            <div className={\"movie-lite-presentation\"} onClick={() => handleClick()}>\r\n                <div className={\"movie-lite-presentation-img\"}>\r\n                    <img alt=\"\" src={movie.coverImageUrl} />\r\n                </div>\r\n                <div className=\"infos\">\r\n                    <div className=\"title\">{truncate(movie.title, 35)}</div>\r\n                    <div style={{ width: '100%', display: 'flex', justifyContent: 'space-between' }}>\r\n                        <div className=\"year\">{movie.year}</div>\r\n                        <div className=\"rating\">{movie.rating}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieLitePresentation;","import \"../style/movies-list.css\";\r\nimport \"../style/button.css\";\r\n\r\nimport MovieLitePresentation from \"./MovieLitePresentation\";\r\n\r\nimport ArrowForwardIosRounded from '@material-ui/icons/ArrowForwardIosRounded';\r\nimport ArrowBackIosRounded from '@material-ui/icons/ArrowBackIosRounded';\r\n\r\nimport fadeTransition from \"../js/customStyles.js\";\r\nimport { useEffect, useRef, useState } from 'react';\r\n\r\nfunction MoviesListLite({ movies, onMovieClick }) {\r\n  const listRef = useRef(null);\r\n  const [hideBackArrow, setHideBackArrow] = useState(true);\r\n  const [hideForwardArrow, setHideForwardArrow] = useState(false);\r\n\r\n  useEffect(() => {\r\n    listRef.current.onscroll = () => {\r\n      showHideNavArrows();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!movies || movies.length === 0) {\r\n      setHideForwardArrow(true);\r\n      setHideBackArrow(true);\r\n    }\r\n    else showHideNavArrows();\r\n  }, [movies]);\r\n\r\n  useEffect(()=>{ showHideNavArrows(); }, [hideBackArrow, hideForwardArrow]);\r\n\r\n  const isElementVisible = (elem, boundings) => {\r\n    const elemBoundings = elem.getBoundingClientRect();\r\n    return Math.floor(elemBoundings.right) <= Math.floor(boundings.right)\r\n      && Math.floor(elemBoundings.left) >= Math.floor(boundings.left);\r\n  }\r\n\r\n  const getVisibleRange = () => {\r\n    var indexes = []\r\n    var listBoundings = listRef.current.getBoundingClientRect();\r\n    for (let i = 0; i < listRef.current.children.length; i++) {\r\n      if (isElementVisible(listRef.current.children[i], listBoundings))\r\n        indexes.push(i);\r\n    }\r\n\r\n    return {\r\n      'maxIndex': Math.max(...indexes),\r\n      'minIndex': Math.min(...indexes),\r\n      'count': indexes.length\r\n    }\r\n  }\r\n\r\n  const navToRight = () => {\r\n    if (listRef.current.children && listRef.current.children.length > 0) {\r\n      var visibleRange = getVisibleRange();\r\n      var goToIndex = visibleRange.maxIndex + visibleRange.count;\r\n      var index = goToIndex > listRef.current.children.length - 1 ? listRef.current.children.length - 1 : goToIndex;\r\n\r\n      listRef.current.children[index].scrollIntoView({\r\n        behavior: 'smooth',\r\n        block: \"nearest\",\r\n        inline: \"nearest\"\r\n      });\r\n    }\r\n  }\r\n\r\n  const navToLeft = () => {\r\n    if (listRef.current.children && listRef.current.children.length > 0) {\r\n      var visibleRange = getVisibleRange();\r\n      var goToIndex = visibleRange.minIndex - visibleRange.count;\r\n      var index = goToIndex < 0 ? 0 : goToIndex;\r\n\r\n      listRef.current.children[index].scrollIntoView({\r\n        behavior: 'smooth',\r\n        block: \"nearest\",\r\n        inline: \"nearest\"\r\n      });\r\n    }\r\n  }\r\n\r\n  const showHideNavArrows = () => {\r\n    if (listRef.current.children && listRef.current.children.length > 0) {\r\n      var listBoundings = listRef.current.getBoundingClientRect();\r\n      setHideBackArrow(isElementVisible(listRef.current.children[0], listBoundings));\r\n      setHideForwardArrow(isElementVisible(listRef.current.children[listRef.current.children.length - 1], listBoundings));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={\"movies-list-container\"}>\r\n      <div style={fadeTransition(!hideBackArrow)} className=\"floating-navigation-btn left\" onClick={() => navToLeft()}>\r\n        <ArrowBackIosRounded style={{ fontSize: 40, color: 'white' }} />\r\n      </div>\r\n      <div style={fadeTransition(!hideForwardArrow)} className=\"floating-navigation-btn right\" onClick={() => navToRight()}>\r\n        <ArrowForwardIosRounded style={{ fontSize: 40, color: 'white' }} />\r\n      </div>\r\n      <div ref={listRef} className={\"movies-list\"+ (hideBackArrow && hideForwardArrow ? ' center' : '')}>\r\n        {movies.map((movie, index) => (<MovieLitePresentation key={index} movie={movie} onMovieClick={(movieId)=>onMovieClick(movieId)}/>))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default MoviesListLite;","import TextField from '@material-ui/core/TextField';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport \"../style/search-view.css\";\r\n\r\nimport ModalWindow from \"./ModalWindow\";\r\nimport MoviesListLite from \"./MoviesListLite\";\r\nimport CircularProgressBar from \"./CircularProgressBar\";\r\nimport MoviesAPI from \"../js/moviesAPI.js\";\r\nimport fadeTransition from \"../js/customStyles.js\";\r\n\r\nimport { useEffect, useState, useRef } from 'react';\r\n\r\nfunction ModalSearch({ visible, onCloseClick, onMovieClick }) {\r\n    const [searchValue, setSearchValue] = useState('');\r\n    const [movies, setMovies] = useState([]);\r\n    const [searchInProgress, setSearchInProgress] = useState(false);\r\n    const [searchResultLabel, setSearchResultLabel] = useState('');\r\n    const searchValueRef = useRef(searchValue);\r\n\r\n    useEffect(() => {\r\n        if (!visible) setSearchValue('');\r\n    }, [visible]);\r\n\r\n    useEffect(() => {\r\n        if (searchValue && searchValue.length > 2) {\r\n            searchValueRef.current = searchValue;\r\n            setTimeout(() => {\r\n                if (searchValue === searchValueRef.current) {\r\n                    setSearchInProgress(true);\r\n                    setSearchResultLabel(\"\");\r\n                    setMovies([]);\r\n                    MoviesAPI.searchMovies(searchValue,\r\n                        (movies) => {\r\n                            setSearchInProgress(false);\r\n                            if (movies && movies.length > 0) {\r\n                                setSearchResultLabel(movies.length + \" movies found\");\r\n                                setMovies(movies);\r\n                            }\r\n                            else setSearchResultLabel(\"No result found\");\r\n                        },\r\n                        () => {\r\n                            setSearchInProgress(false);\r\n                            setSearchResultLabel(\"No result found\");\r\n                        });\r\n                }\r\n            }, 1000);\r\n        }\r\n        else {\r\n            setSearchResultLabel(\"\");\r\n            setMovies([]);\r\n        }\r\n    }, [searchValue]);\r\n\r\n    const searchView = () => {\r\n        return (\r\n            <div className=\"search-view-container\">\r\n                <div className=\"search-field-container\">\r\n                    <div className=\"search-field\">\r\n                        <CircularProgressBar color={'white'} size={'40px'} visible={searchInProgress} />\r\n                        <TextField value={searchValue} onChange={(e) => { setSearchValue(e.target.value) }} disabled={searchInProgress} placeholder=\"Enter a movie name\" />\r\n                        <ClearIcon style={fadeTransition(searchValue && !searchInProgress)} className='delete-text-cross' onClick={() => { setSearchValue('') }} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"movies-search-result\">\r\n                    <MoviesListLite movies={movies} onMovieClick={(movieId) => onMovieClick(movieId)} />\r\n                    <div className=\"label-result\">{searchResultLabel}</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <ModalWindow visible={visible} content={searchView()} onCloseClick={()=>onCloseClick()}/>\r\n    );\r\n}\r\n\r\nexport default ModalSearch;","import \"../style/list-genres-view.css\";\r\nimport MoviesAPI from \"../js/moviesAPI.js\";\r\nimport ModalWindow from \"./ModalWindow\";\r\nimport CircularProgressBar from \"./CircularProgressBar\";\r\n\r\nimport { useEffect, useState } from 'react';\r\n\r\nfunction ModalListGenre({ visible, onCloseClick, onGenreClick }) {\r\n\r\n    const [genres, setGenres] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const listGenresView = () => {\r\n        return (\r\n            <div className=\"list-genres-view-container\">\r\n                <CircularProgressBar color={'white'} size={'60px'} position={'center'} visible={loading} />\r\n                <div className=\"list-genres\">\r\n                    {genres.map(genre =>\r\n                        <div key={genre}\r\n                            className=\"genre\"\r\n                            onClick={() => onGenreClick(genre)}>\r\n                            {genre}\r\n                        </div>)}\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        MoviesAPI.getMoviesGenres(\r\n            (genres) => {\r\n                if (genres && genres.length > 0) setGenres(genres);\r\n                setLoading(false);\r\n            }\r\n        );\r\n    }, []);\r\n\r\n    return (\r\n        <ModalWindow visible={visible} content={listGenresView()} onCloseClick={() => onCloseClick()} />\r\n    )\r\n}\r\n\r\nexport default ModalListGenre;","import \"../style/movie-lite-presentation.css\";\r\nimport \"../style/movies-list.css\";\r\nimport \"../style/button.css\";\r\n\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CircularProgressBar from \"./CircularProgressBar\";\r\n\r\nimport MovieLitePresentation from \"./MovieLitePresentation\";\r\nimport MoviesAPI from \"../js/moviesAPI.js\";\r\n\r\nimport { useEffect, useState } from 'react';\r\n\r\nconst cache = {\r\n    update(genre, movies, pageIndex, elemId) {\r\n        this.genre = genre;\r\n        this.movies = movies;\r\n        this.pageIndex = pageIndex;\r\n        this.movieElementId = elemId;\r\n    },\r\n    get(genre) {\r\n        return this.genre === genre ?\r\n            {\r\n                movies: this.movies,\r\n                pageIndex: this.pageIndex,\r\n                movieElementId: this.movieElementId\r\n            }\r\n            : null;\r\n    },\r\n    clear() {\r\n        this.genre = '';\r\n        this.movies = null;\r\n    },\r\n    genre: '',\r\n    movies: null,\r\n    pageIndex: 0,\r\n    movieElementId: ''\r\n}\r\n\r\nfunction MoviesListGenreFull({ genre, loadFromCache, onMovieClick }) {\r\n\r\n    const [movies, setMovies] = useState([]);\r\n    const [pageIndex, setPageIndex] = useState(0);\r\n    const [searchInProgress, setSearchInProgress] = useState(false);\r\n\r\n    const addIconStyle = {\r\n        width: '60px',\r\n        height: '60px',\r\n        color: 'white',\r\n        margin: 'auto'\r\n    };\r\n\r\n    const performSearch = () => {\r\n        setSearchInProgress(true);\r\n        MoviesAPI.getMoviesByGenre(genre, pageIndex,\r\n            (moviesOfGenre) => {\r\n                setSearchInProgress(false);\r\n                if (moviesOfGenre && moviesOfGenre.length > 0) {\r\n                    if (pageIndex === 1) setMovies(moviesOfGenre);\r\n                    else setMovies(movies.concat(moviesOfGenre));\r\n                }\r\n            },\r\n            () => setSearchInProgress(false));\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if (loadFromCache) {\r\n            const cacheMovies = cache.get(genre);\r\n            setPageIndex(cacheMovies.pageIndex);\r\n        }\r\n        else {           \r\n            setPageIndex(1); \r\n            if(pageIndex === 1) performSearch(); \r\n        }\r\n    }, [genre]);\r\n\r\n    useEffect(() => {\r\n        if (pageIndex > 0) {       \r\n            const cacheMovies = cache.get(genre);\r\n            if (cacheMovies) setMovies(cacheMovies.movies);\r\n            else performSearch();\r\n        }\r\n    }, [pageIndex]);\r\n\r\n    useEffect(() => {\r\n        if (movies && movies.length > 0) {\r\n            if (loadFromCache) {\r\n                const cacheMovies = cache.get(genre);\r\n                if (cacheMovies) {\r\n                    scrollToMovie(cacheMovies.movieElementId);\r\n                    cache.clear();\r\n                }\r\n            }\r\n            else if(pageIndex === 1)  scrollToMovie(\"movielite0\");\r\n        }\r\n    }, [movies]);\r\n\r\n    const scrollToMovie = (elemId) => {\r\n        var elem = document.getElementById(elemId);\r\n        if (elem) {\r\n            elem.scrollIntoView({\r\n                block: \"nearest\",\r\n                inline: \"nearest\"\r\n            });\r\n        }\r\n    }\r\n\r\n    const handleMovieClick = (movieId, elementId) => {\r\n        cache.update(genre, movies, pageIndex, elementId);\r\n        onMovieClick(movieId);\r\n    }\r\n\r\n    return (\r\n        <div className=\"movies-list-by-genre-container\">\r\n            <div className=\"movies-list-by-genre-header\">\r\n                <div className=\"movies-list-genre\">{genre}</div>\r\n                <CircularProgressBar size={'30px'} color={'white'} visible={searchInProgress} />\r\n            </div>\r\n            <div className=\"movies-list-container full\">\r\n                <div className=\"movies-list wrap-content\">\r\n                    {movies.map((movie, index) =>\r\n                    (<div id={\"movielite\" + index} key={index}>\r\n                        <MovieLitePresentation movie={movie} onMovieClick={(movieId) => handleMovieClick(movieId, \"movielite\" + index)} />\r\n                    </div>))}\r\n                    <div className=\"movies-list-more\">\r\n                        <div className=\"round-btn grey\"\r\n                            style={{ visibility: !searchInProgress ? 'visible' : 'hidden' }}\r\n                            onClick={() => { if (!searchInProgress) setPageIndex(pageIndex + 1) }}>\r\n                            <AddIcon style={addIconStyle} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MoviesListGenreFull;","import \"../style/video-player.css\";\r\n\r\nimport CircularProgressBar from \"./CircularProgressBar\";\r\n\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\nimport VolumeUp from '@material-ui/icons/VolumeUp';\r\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport SubtitlesIcon from '@material-ui/icons/Subtitles';\r\nimport FullscreenIcon from '@material-ui/icons/Fullscreen';\r\nimport FullscreenExitIcon from '@material-ui/icons/FullscreenExit';\r\nimport SortByAlphaIcon from '@material-ui/icons/SortByAlpha';\r\nimport RestoreIcon from '@material-ui/icons/Restore';\r\n\r\nimport { useEffect, useState, useRef } from 'react';\r\nimport { useOnClickOutside } from '../js/customHooks';\r\n\r\nfunction VideoPlayer({ videoQualitiesOptions, videoSubtitlesOptions }) {\r\n    const videoRef = useRef(null);\r\n    const videoPlayerContainerRef = useRef(null);\r\n\r\n    const [videoSource, setVideoSource] = useState('');\r\n    const [videoIsLoading, setVideoIsLoading] = useState(false);\r\n\r\n    const [subtitlesUrl, setSubtitlesUrl] = useState('');\r\n    const [subtitlesSize, setSubtitlesSize] = useState(30);\r\n    const [subtitlesAdjustTime, setSubtitlesAdjustTime] = useState(0);\r\n\r\n\r\n    const [showVideoControls, setShowVideoControls] = useState(false);\r\n    const lastTimeMouseMovedRef = useRef(0);\r\n\r\n    const changeVideoSource = (url) => {\r\n        var videoPlaying = !videoRef.current.paused;\r\n        setVideoSource(url);\r\n        var currentTime = videoRef.current.currentTime;\r\n        videoRef.current.load();\r\n        videoRef.current.currentTime = currentTime;\r\n        if (videoPlaying) videoRef.current.play();\r\n    }\r\n\r\n    useEffect(() => {\r\n        const displayControls = () => {\r\n            setShowVideoControls(true);\r\n            lastTimeMouseMovedRef.current = Date.now();\r\n            const waitingTime = 3000;\r\n            setTimeout(() => {\r\n                if (videoPlayerContainerRef?.current && Date.now() > lastTimeMouseMovedRef.current + waitingTime)\r\n                    setShowVideoControls(false);\r\n            }, waitingTime + 500);\r\n        };\r\n        videoPlayerContainerRef.current.addEventListener(\"mousemove\", displayControls);\r\n\r\n        return () => {\r\n            if (videoPlayerContainerRef?.current) videoPlayerContainerRef.current.removeEventListener(\"mousemove\", displayControls);\r\n        }\r\n    }, [videoPlayerContainerRef]);\r\n\r\n    useEffect(() => {\r\n        if (videoRef?.current) setVideoIsLoading(videoRef?.current?.readyState !== 4);\r\n    }, [videoRef?.current?.readyState]);\r\n\r\n    useEffect(() => {\r\n        if (videoQualitiesOptions) {\r\n            const videoQuality = videoQualitiesOptions.find(op => op.selected);\r\n            if (videoQuality?.data?.url) changeVideoSource(videoQuality.data.url);\r\n        }\r\n    }, [videoQualitiesOptions])\r\n\r\n    return (\r\n        <div ref={videoPlayerContainerRef} className=\"video-player-content\" >\r\n            <CircularProgressBar color={'white'} size={'80px'} position={\"center\"} visible={videoIsLoading} />\r\n            <video ref={videoRef} className=\"video-player\">\r\n                <source src={videoSource} title='1080p' type='video/mp4' />\r\n            </video>\r\n            <div className=\"video-player-bottom\">\r\n                <VideoSubtitles\r\n                    videoPlayer={videoRef.current}\r\n                    urlSource={subtitlesUrl}\r\n                    size={subtitlesSize}\r\n                    subtitlesAdjustTime={subtitlesAdjustTime} />\r\n                <div className=\"video-player-controls-container\" style={{ display: showVideoControls ? '' : 'none' }}>\r\n                    <TimeController videoPlayer={videoRef.current} />\r\n                    <div className=\"video-player-controls\">\r\n                        <LeftControlsGroup videoPlayer={videoRef.current} />\r\n                        <RightControlsGroup\r\n                            videoPlayerContainer={videoPlayerContainerRef.current}\r\n                            subtitlesOptions={videoSubtitlesOptions}\r\n                            qualityOptions={videoQualitiesOptions}\r\n                            onSubtitleSizeChange={(pixelsToAdd) => setSubtitlesSize(subtitlesSize + pixelsToAdd <= 60 && subtitlesSize + pixelsToAdd >= 20 ? subtitlesSize + pixelsToAdd : subtitlesSize)}\r\n                            onSubtitlesChange={(newUrlSource) => setSubtitlesUrl(newUrlSource ? newUrlSource : '')}\r\n                            onAdjustSubtitleTimeChange={(time) => setSubtitlesAdjustTime(time ? time : 0)}\r\n                            onVideoQualityChange={(newUrlSource) => changeVideoSource(newUrlSource)} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default VideoPlayer;\r\n\r\nfunction VideoSubtitles({ videoPlayer, urlSource, size, subtitlesAdjustTime }) {\r\n    const [currentSubtitles, setCurrentSubtitles] = useState('');\r\n    const [subtitles, setSubtitles] = useState([]);\r\n\r\n    const applySubtitles = () => {\r\n        if (!subtitles || subtitles.length === 0)\r\n            return;\r\n        const currentTime = videoPlayer.currentTime;\r\n        var subtitle = subtitles.find(s =>\r\n            (s.startTime + subtitlesAdjustTime) <= currentTime && currentTime <= (s.endTime + subtitlesAdjustTime));\r\n        setCurrentSubtitles(subtitle ? subtitle.text : '');\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (urlSource) {\r\n            var xhttp = new XMLHttpRequest();\r\n            xhttp.onreadystatechange = function () {\r\n                if (this.readyState == 4 && this.status == 200 && this.responseText) {\r\n                    setSubtitles(JSON.parse(this.response));\r\n                }\r\n            };\r\n            xhttp.open(\"GET\", urlSource, true);\r\n            xhttp.send();\r\n        }\r\n\r\n        return () => {\r\n            setSubtitles([]);\r\n            setCurrentSubtitles('');\r\n        }\r\n    }, [urlSource]);\r\n\r\n    useEffect(() => {\r\n        videoPlayer?.addEventListener('timeupdate', applySubtitles);\r\n        return () => {\r\n            videoPlayer?.removeEventListener('timeupdate', applySubtitles);\r\n        };\r\n    }, [videoPlayer, subtitles, subtitlesAdjustTime]);\r\n\r\n    return (<div className=\"video-player-subtitles\" style={{ fontSize: size + 'px' }}>{currentSubtitles}</div>);\r\n}\r\n\r\nfunction LeftControlsGroup({ videoPlayer }) {\r\n    const [videoIsPlaying, setVideoIsPlaying] = useState(false);\r\n\r\n    const playVideo = () => {\r\n        if (!videoPlayer) return;\r\n        videoPlayer.play();\r\n    }\r\n\r\n    const pauseVideo = () => {\r\n        if (!videoPlayer) return;\r\n        videoPlayer.pause();\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (videoPlayer) {\r\n            videoPlayer.onplay = () => { setVideoIsPlaying(true) }\r\n            videoPlayer.onpause = () => { setVideoIsPlaying(false) }\r\n        }\r\n        return () => {\r\n            if (videoPlayer) {\r\n                videoPlayer.onplay = null;\r\n                videoPlayer.onpause = null;\r\n            }\r\n        }\r\n    }, [videoPlayer]);\r\n\r\n\r\n    return (\r\n        <div className=\"controls-group\">\r\n            <PlayArrowIcon className=\"icon\" style={{ display: videoIsPlaying ? 'none' : '' }} onClick={() => playVideo()} />\r\n            <PauseIcon className=\"icon\" style={{ display: videoIsPlaying ? '' : 'none' }} onClick={() => pauseVideo()} />\r\n            <VolumeController videoPlayer={videoPlayer} />\r\n        </div>)\r\n}\r\n\r\nfunction RightControlsGroup({\r\n    videoPlayerContainer,\r\n    subtitlesOptions,\r\n    qualityOptions,\r\n    onSubtitleSizeChange,\r\n    onSubtitlesChange,\r\n    onAdjustSubtitleTimeChange,\r\n    onVideoQualityChange }) {\r\n\r\n    const [videoInFullscreen, setVideoInFullscreen] = useState(false);\r\n    const [screenPlayer, setScreenPlayer] = useState(null);\r\n\r\n    const toFullScreen = () => {\r\n        if (!screenPlayer) return;\r\n\r\n        if (screenPlayer.requestFullscreen) screenPlayer.requestFullscreen();\r\n        else if (screenPlayer.mozRequestFullScreen) screenPlayer.mozRequestFullScreen();\r\n        else if (screenPlayer.webkitRequestFullscreen) screenPlayer.webkitRequestFullscreen();\r\n        else if (screenPlayer.msRequestFullscreen) screenPlayer.msRequestFullscreen();\r\n    }\r\n\r\n    const leaveFullScreen = () => {\r\n        document.exitFullscreen();\r\n    }\r\n\r\n    useEffect(() => {\r\n        setScreenPlayer(videoPlayerContainer);\r\n    }, [videoPlayerContainer]);\r\n\r\n    useEffect(() => {\r\n        const toggleVideoFullScreenInfo = () => {\r\n            setVideoInFullscreen(!videoInFullscreen);\r\n        }\r\n        document.addEventListener('fullscreenchange', toggleVideoFullScreenInfo);\r\n        return () => {\r\n            document.removeEventListener('fullscreenchange', toggleVideoFullScreenInfo);\r\n        };\r\n    }, [videoInFullscreen]);\r\n\r\n    return (\r\n        <div className=\"controls-group\">\r\n\r\n            <AdjustSubtitleTimeOption onAdjustSubtitleTimeChange={(time)=> onAdjustSubtitleTimeChange(time)}/>\r\n\r\n            <SortByAlphaIcon className=\"icon big\" onClick={() => onSubtitleSizeChange(2)} />\r\n            <SortByAlphaIcon className=\"icon small\" onClick={() => onSubtitleSizeChange(-2)} />\r\n\r\n            <VideoOptions options={subtitlesOptions}\r\n                icon={<SubtitlesIcon className=\"icon\" />}\r\n                onOptionChanged={(option) => onSubtitlesChange(option?.data?.url ? option.data.url : '')}\r\n            />\r\n            <VideoOptions options={qualityOptions}\r\n                icon={<SettingsIcon className=\"icon\" />}\r\n                onOptionChanged={(option) => onVideoQualityChange(option?.data?.url ? option.data.url : '')}\r\n            />\r\n            <FullscreenIcon className=\"icon big\" style={{ display: videoInFullscreen ? 'none' : '' }} onClick={() => toFullScreen()} />\r\n            <FullscreenExitIcon className=\"icon big\" style={{ display: videoInFullscreen ? '' : 'none' }} onClick={() => leaveFullScreen()} />\r\n        </div>)\r\n}\r\n\r\nfunction AdjustSubtitleTimeOption({onAdjustSubtitleTimeChange}) {\r\n\r\n    const [showMenu, setShowMenu] = useState(false);\r\n    const menuRef = useRef(null);\r\n\r\n    useOnClickOutside(menuRef, () => setShowMenu(false));\r\n\r\n    return (\r\n        <div  ref={menuRef} className=\"adjust-subtitle-time-container\">\r\n            <div className={\"video-options-menu\" + (showMenu ? '' : ' hidden')}>\r\n                <div className=\"option\">Adj. Sub.</div>\r\n                <div className=\"adjust-subtitle-time-input-container\">\r\n                    <input type=\"number\" step=\"0.01\" onChange={(e)=> onAdjustSubtitleTimeChange(e.target.valueAsNumber) }/><span className=\"option\"> s</span>\r\n                </div>\r\n            </div>\r\n            <RestoreIcon className=\"icon\" onClick={() => setShowMenu(!showMenu)} />\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction TimeController({ videoPlayer }) {\r\n    const [videoCurrentTimeLabel, setVideoCurrentTimeLabel] = useState('00:00');\r\n    const [videoTotalTimeLabel, setVideoTotalTimeLabel] = useState('00:00');\r\n    const [currentPourcentageTimeVideo, setcurrentPourcentageTimeVideo] = useState(0);\r\n\r\n\r\n    const getTimeLabel = (duration) => {\r\n        let hours = Math.floor(duration / 3600);\r\n        let minutes = Math.floor((duration - (hours * 3600)) / 60);\r\n        let seconds = Math.floor(duration - (hours * 3600) - (minutes * 60));\r\n\r\n        let hourValues = '';\r\n        if (hours > 0) {\r\n            hourValues = hours < 10 ? '0' + hours : hours;\r\n            hourValues += ':';\r\n        }\r\n        let minuteValue = minutes < 10 ? '0' + minutes : minutes;\r\n        let secondValue = seconds < 10 ? '0' + seconds : seconds;\r\n        return hourValues + minuteValue + ':' + secondValue;\r\n    };\r\n\r\n    const changeTimeVideo = (percentage) => {\r\n        if (videoPlayer?.duration) {\r\n            videoPlayer.currentTime = Math.floor((percentage * videoPlayer.duration) / 100);\r\n            setVideoCurrentTimeLabel(getTimeLabel(videoPlayer.currentTime));\r\n        }\r\n    }\r\n\r\n    const updateTimeVideo = () => {\r\n        setVideoCurrentTimeLabel(getTimeLabel(videoPlayer.currentTime));\r\n        setcurrentPourcentageTimeVideo((videoPlayer.currentTime) * 100 / videoPlayer.duration);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (videoPlayer)\r\n            videoPlayer.addEventListener('timeupdate', updateTimeVideo);\r\n\r\n        return () => {\r\n            if (videoPlayer) videoPlayer.removeEventListener('timeupdate', updateTimeVideo);\r\n        }\r\n    }, [videoPlayer]);\r\n\r\n    useEffect(() => {\r\n        if (videoPlayer?.duration)\r\n            setVideoTotalTimeLabel(getTimeLabel(videoPlayer.duration));\r\n\r\n    }, [videoPlayer?.duration]);\r\n\r\n    return (\r\n        <div className=\"video-time-controller-container\">\r\n            <div className=\"video-time-label\">{videoCurrentTimeLabel}</div>\r\n            <VideoPlayerSlider value={currentPourcentageTimeVideo}\r\n                onCursorMoved={(percentage) => changeTimeVideo(percentage)}\r\n                progressColor={'#ed0f0f'}\r\n                cursorColor={'#b59e9e'} />\r\n            <div className=\"video-time-label\">{videoTotalTimeLabel}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction VolumeController({ videoPlayer }) {\r\n\r\n    const defaultVolume = 70;\r\n    const [currentVolume, setCurrentVolume] = useState(defaultVolume);\r\n    const [previousVolume, setPreviousVolume] = useState(defaultVolume);\r\n\r\n    const changeVolume = (percentage) => {\r\n        if (videoPlayer) {\r\n            videoPlayer.volume = percentage / 100;\r\n            setCurrentVolume(percentage);\r\n        }\r\n    };\r\n\r\n    const muteVideo = () => {\r\n        setPreviousVolume(currentVolume);\r\n        changeVolume(0);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (videoPlayer) changeVolume(defaultVolume);\r\n    }, [videoPlayer]);\r\n\r\n    return (<div className=\"video-volume-controller\">\r\n        <VolumeUp className=\"icon\" onClick={() => { muteVideo() }} style={{ display: currentVolume > 0 ? '' : 'none' }} />\r\n        <VolumeOffIcon className=\"icon\" onClick={() => changeVolume(previousVolume)} style={{ display: currentVolume > 0 ? 'none' : '' }} />\r\n        <VideoPlayerSlider\r\n            value={currentVolume}\r\n            onCursorMoved={(percentage) => changeVolume(percentage)}\r\n            width={'120px'}\r\n            height={'4px'} />\r\n    </div>)\r\n}\r\n\r\nfunction VideoOptions({ options, icon, onOptionChanged }) {\r\n\r\n    const [menuOptions, setMenuOptions] = useState([]);\r\n    const [showMenu, setShowMenu] = useState(false);\r\n    const [optionsDisplay, setOptionsDisplay] = useState('');\r\n    const optionsWindowRef = useRef(null);\r\n\r\n    const updateMenuOptions = (selectedOption, selectedSubOption) => {\r\n\r\n        const oldSelectedOption = menuOptions.find(op => op.selected);\r\n        const oldSelectedSubOption = selectedOption?.subOptions?.find(subOp => subOp.selected);\r\n\r\n        if (selectedOption?.subOptions && !selectedSubOption)\r\n            return;\r\n\r\n        if (selectedOption?.subOptions\r\n            && oldSelectedSubOption?.label === selectedSubOption?.label)\r\n            return;\r\n\r\n        if (!selectedOption?.subOptions && oldSelectedOption?.label === selectedOption.label)\r\n            return;\r\n\r\n        var updatedOptions = [];\r\n        menuOptions.forEach(op => {\r\n            var updatedOption = {\r\n                label: op.label,\r\n                selected: op.label === selectedOption.label,\r\n                data: op.data\r\n            };\r\n            var updatedSubOptions = [];\r\n            if (op.subOptions) {\r\n                op.subOptions.forEach(subOp => {\r\n                    var updatedsubOption =\r\n                    {\r\n                        label: subOp.label,\r\n                        data: subOp.data,\r\n                        selected: subOp.label === selectedSubOption?.label\r\n                    }\r\n                    updatedSubOptions.push(updatedsubOption);\r\n                })\r\n                updatedOption.subOptions = updatedSubOptions;\r\n            }\r\n            updatedOptions.push(updatedOption);\r\n        });\r\n\r\n        setMenuOptions(updatedOptions);\r\n\r\n        setShowMenu(false);\r\n\r\n        var selectedOption = updatedOptions.find(op => op.selected);\r\n        if (selectedOption.subOptions) onOptionChanged(selectedOption.subOptions.find(subOp => subOp.selected));\r\n        else onOptionChanged(selectedOption);\r\n    }\r\n\r\n    const setSubOptionsVisibility = (option, visible) => {\r\n        var element = document.getElementById('suboption-' + option.label)\r\n        if (!element)\r\n            return;\r\n\r\n        if (visible) element.classList.remove(\"hidden\");\r\n        else element.classList.add(\"hidden\");\r\n    }\r\n\r\n    const getOptionsDisplay = (options) => {\r\n        return options.map(option =>\r\n        (<div key={option.label} className={\"option \" + (option.selected ? 'selected' : '')}\r\n            onClick={() => updateMenuOptions(option)}\r\n            onMouseOver={() => setSubOptionsVisibility(option, true)}\r\n            onMouseLeave={() => setSubOptionsVisibility(option, false)}>\r\n            {option.label}\r\n            {getSubOptionsDisplay(option)}\r\n        </div>))\r\n    }\r\n\r\n    const getSubOptionsDisplay = (option) => {\r\n        if (!option?.subOptions)\r\n            return null;\r\n        else {\r\n            return (\r\n                <div id={'suboption-' + option.label} className=\"video-options-menu suboptions hidden\">\r\n                    {option.subOptions.map(subOption =>\r\n                    (<div key={subOption.label} className={\"option \" + (subOption.selected ? 'selected' : '')}\r\n                        onClick={(event) => { updateMenuOptions(option, subOption); event.stopPropagation() }}>\r\n                        {subOption.label}\r\n                    </div>)\r\n                    )}\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (options) {\r\n            setMenuOptions(options);\r\n        }\r\n    }, [options]);\r\n\r\n    useEffect(() => {\r\n        if (menuOptions?.length && menuOptions.length > 0) {\r\n            setOptionsDisplay(getOptionsDisplay(menuOptions));\r\n        }\r\n    }, [menuOptions]);\r\n\r\n    useOnClickOutside(optionsWindowRef, () => setShowMenu(false));\r\n\r\n    return (\r\n        <div ref={optionsWindowRef} className=\"video-options-container\">\r\n            <div className={\"video-options-menu \" + (showMenu ? '' : 'hidden')}>\r\n                {optionsDisplay}\r\n            </div>\r\n            <div className=\"video-options-show-btn\" onClick={() => setShowMenu(!showMenu)}>\r\n                {icon}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction VideoPlayerSlider({ value, onCursorMoved, width, height, progressColor, cursorColor }) {\r\n    const [cursorPosition, setCursorPosition] = useState(0);\r\n\r\n    const initiateCursorMove = () => {\r\n        document.addEventListener('mousemove', moveCursor);\r\n        document.addEventListener('mouseup', endMove);\r\n    }\r\n\r\n    const moveCursor = (event) => {\r\n        var mouseXPosition = event.clientX;\r\n        var railRect = event.target.parentElement.getBoundingClientRect();\r\n        if (mouseXPosition >= railRect.left && mouseXPosition <= railRect.right) {\r\n            var percentage = (mouseXPosition - railRect.left) * 100 / (railRect.right - railRect.left);\r\n            setCursorPosition(percentage);\r\n            onCursorMoved(percentage);\r\n        }\r\n    }\r\n\r\n    const endMove = () => {\r\n        document.removeEventListener('mouseup', endMove);\r\n        document.removeEventListener('mousemove', moveCursor);\r\n    }\r\n\r\n    useEffect(() => {\r\n        setCursorPosition(value);\r\n    }, [value])\r\n\r\n    return (\r\n        <div className=\"video-player-slider-container\" style={{ width: width, height: height }} onClick={(event) => moveCursor(event)}>\r\n            <div className=\"complete-part\" style={{ width: cursorPosition + \"%\", backgroundColor: progressColor }}></div>\r\n            <div className=\"remaining-part\" style={{ width: (100 - cursorPosition) + \"%\" }}></div>\r\n            <div className=\"cursor\" style={{ left: cursorPosition + '%', backgroundColor: cursorColor }} onMouseDown={() => initiateCursorMove()}></div>\r\n        </div>)\r\n}\r\n","\r\nimport \"../style/video-player-window.css\";\r\nimport \"../style/button.css\";\r\nimport MoviesAPI from \"../js/moviesAPI\";\r\nimport VideoPlayer from \"./VideoPlayer\";\r\n\r\nimport { useEffect, useState, useRef } from 'react';\r\nimport fadeTransition from \"../js/customStyles.js\";\r\nimport { useOnClickOutside} from '../js/customHooks';\r\n\r\nfunction VideoPlayerWindow({ movie, visible, onCloseClick }) {\r\n    const [subtitlesOptions, setSubtitlesOptions] = useState([]);\r\n    const [videoQualitiesOptions, setVideoQualitiesOptions] = useState([]);\r\n    const videoPlayerContainerRef = useRef(null);\r\n\r\n    const buildVideoQualitiesOptions = (movie) => {\r\n        var options = [];\r\n       if(!movie.torrents) return;\r\n        movie.torrents.forEach(t => {\r\n            var qualities = options.filter(o => o.label.startsWith(t.quality));\r\n\r\n            var option = {\r\n                label: qualities && qualities.length > 0 ? t.quality + ' (' + (qualities.length + 1) + ')': t.quality,\r\n                selected: false,\r\n                data: {\r\n                    url: MoviesAPI.apiStreamUrl + t.downloadUrl\r\n                }\r\n            }\r\n            options.push(option);\r\n        });\r\n        options[0].selected = true;\r\n        setVideoQualitiesOptions(options);\r\n    }\r\n\r\n    const buildSubtitlesOptions = (subtitles) => {\r\n        var newSubtitlesOptions = [];\r\n        newSubtitlesOptions.push(\r\n            {\r\n                label: 'Off',\r\n                selected: true\r\n            });\r\n        subtitles.forEach(sub => {\r\n            var subtitlesOption = {\r\n                label: sub.language,\r\n                selected: false,\r\n                subOptions: []\r\n            };\r\n            sub.subtitlesIds.forEach((id, index) => {\r\n                subtitlesOption.subOptions.push({\r\n                    label: sub.language + ' ' + (index + 1),\r\n                    selected: false,\r\n                    data: {\r\n                        url: MoviesAPI.apiSubtitlesUrl + id\r\n                    }\r\n                });\r\n            })\r\n            newSubtitlesOptions.push(subtitlesOption);\r\n        });\r\n        setSubtitlesOptions(newSubtitlesOptions);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (movie?.imdbCode) {\r\n            MoviesAPI.getAvailableSubtitles(movie.imdbCode,\r\n                (availableSubtitles) => {\r\n                    buildSubtitlesOptions(availableSubtitles);\r\n                })\r\n            buildVideoQualitiesOptions(movie);\r\n        }\r\n    }, [movie]);\r\n\r\n    useOnClickOutside(videoPlayerContainerRef, () => onCloseClick());\r\n\r\n    return (\r\n        <div style={fadeTransition(visible)} className=\"video-player-window-container\">\r\n            <div ref={videoPlayerContainerRef} className=\"video-player-container\">\r\n                <VideoPlayer videoQualitiesOptions={videoQualitiesOptions} videoSubtitlesOptions={subtitlesOptions} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default VideoPlayerWindow;","\r\nimport \"../style/movie-full-presentation.css\";\r\nimport \"../style/button.css\";\r\n\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\n\r\nimport VideoPlayerWindow from './VideoPlayerWindow';\r\nimport CircularProgressBar from \"./CircularProgressBar\";\r\n\r\nimport MoviesAPI from \"../js/moviesAPI.js\";\r\nimport fadeTransition from \"../js/customStyles.js\";\r\n\r\nimport { useEffect, useState } from 'react';\r\n\r\n\r\nfunction MovieFullPresentation({ movieId, onCloseClick }) {\r\n\r\n    const [movieDetails, setMovieDetails] = useState({});\r\n    const [dataLoaded, setDataLoaded] = useState(false);\r\n    const [showMoviePlayer, setShowMoviePlayer] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setDataLoaded(false);\r\n        if (movieId) {\r\n            MoviesAPI.getMovieDetails(movieId,\r\n                (details) => {\r\n                    if (details) {\r\n                        setMovieDetails(details);\r\n                        setDataLoaded(true);\r\n                    }\r\n                })\r\n        }\r\n    }, [movieId]);\r\n\r\n    const getVideoQualities = (torrents) => {\r\n        if(!torrents)\r\n            return;\r\n       var qualities = torrents.map(t=> t.quality); //.join(\", \")\r\n       var withoutDoublons = qualities.filter((q, index) => qualities.indexOf(q) === index);\r\n       return withoutDoublons.join(\", \");\r\n    }\r\n\r\n    return (\r\n        <div style={{height: '100%'}}>\r\n            <CircularProgressBar color={'white'} size={'80px'} position={\"center\"} visible={!dataLoaded} />\r\n            <div style={fadeTransition(dataLoaded)} className=\"movie-full-presentation-container\">\r\n                <VideoPlayerWindow visible={showMoviePlayer} movie={showMoviePlayer ? movieDetails : {}} onCloseClick={() => setShowMoviePlayer(false)} />\r\n                <div className=\"movie-full-presentation-close-btn\" onClick={() => onCloseClick()}>\r\n                    <ArrowBackIcon className=\"close-cross\" />\r\n                </div>\r\n                <div className=\"movie-full-presentation-header\" style={{ backgroundImage: 'url(' + movieDetails.backgroundImageUrl + ')' }}>\r\n                    <div className=\"cover-and-rating\">\r\n                        <img className=\"cover\" src={movieDetails.coverImageUrl} />\r\n                        <div className=\"rating\">{movieDetails.rating} </div>\r\n                    </div>\r\n                    <div className=\"title-and-trailer\">\r\n                        <div className=\"title\">{movieDetails.title}</div>\r\n                        <div className=\"year\">{movieDetails.year}</div>\r\n                        <iframe className=\"trailer\" src={movieDetails.youtubeTrailerUrl}></iframe>\r\n                    </div>\r\n                </div>\r\n                <div className=\"movie-full-presentation-play\">\r\n                    <div className=\"qualities\">\r\n                        <span className=\"title\">Qualities </span>{getVideoQualities(movieDetails.torrents)}\r\n                    </div>\r\n                    <div className=\"standard-button red\" onClick={() => setShowMoviePlayer(true)}>\r\n                        <PlayArrowIcon/>\r\n                        <div style={{marginLeft: '5px'}}>Play</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"movie-full-presentation-body\">\r\n                    <div className=\"movie-full-presentation-info\">\r\n                        <div className=\"title\">Genre</div>\r\n                        <div className=\"content\">{movieDetails.genres}</div>\r\n                    </div>\r\n                    <div className=\"movie-full-presentation-info\">\r\n                        <div className=\"title\">Synopsis</div>\r\n                        <div className=\"content\">{movieDetails.synopsis}</div>\r\n                    </div>\r\n                    <div className=\"movie-full-presentation-info\">\r\n                        <div className=\"title\">Director</div>\r\n                        <div className=\"content\">{movieDetails.director}</div>\r\n                    </div>\r\n                    <div className=\"movie-full-presentation-info\">\r\n                        <div className=\"title\">Cast</div>\r\n                        <div className=\"content\">{movieDetails.cast}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\nexport default MovieFullPresentation;\r\n\r\n//override details for tests\r\n// details.imdbCode = \"tt4154796\";\r\n// details.torrents = [\r\n//     {\r\n//         quality: \"720p\",\r\n//         downloadUrl: 'https://cdn.fluidplayer.com/videos/valerian-1080p.mkv'\r\n//     },\r\n//     {\r\n//         quality: \"1080p\",\r\n//         downloadUrl: 'https://www.learningcontainer.com/wp-content/uploads/2020/05/sample-mp4-file.mp4'\r\n//     }\r\n// ]","import \"../style/suggested-movie.css\";\r\nimport \"../style/button.css\";\r\n\r\n\r\nfunction SuggestedMovie({movie, visible, onMoreClick}){\r\n\r\n    const truncateText = (text)=>{\r\n        if(!text) return '';\r\n\r\n        var maxTextlength = 500;\r\n\r\n        return text.substring(0, maxTextlength) + (text && text.length > maxTextlength ? '...' : '');\r\n    }\r\n\r\n    return(\r\n        <div className={\"suggested-movie \" + (!visible ? \"hidden\" : \"\")} style={{backgroundImage: 'url('+ movie.backgroundImageUrl+')'}}>\r\n            <div className=\"suggested-movie-infos\">\r\n                <img alt=\"\" className=\"suggested-movie-cover-image\" src={movie.coverImageUrl}/>\r\n                <div className=\"suggested-movie-rating\">\r\n                    {movie.rating}\r\n                </div>                        \r\n            </div>\r\n            <div className=\"suggested-movie-infos\">\r\n                <div className=\"suggested-movie-title\">{movie.title}</div>\r\n                <div className=\"suggested-movie-year\">{movie.year}</div>\r\n                <div className=\"suggested-movie-summary\">{truncateText(movie.synopsis)}</div>\r\n                <div className=\"standard-button red center\" onClick={()=>onMoreClick()}>More</div>\r\n            </div>\r\n           \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SuggestedMovie;","\r\n\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\nimport SuggestedMovie from \"./SuggestedMovie\";\r\nimport MoviesAPI from \"../js/moviesAPI.js\";\r\nimport { useEffect, useState } from 'react';\r\n\r\nfunction SuggestedMovies({ onMoreClick, onDataLoaded }) {\r\n    const [movies, setMovies] = useState([]);\r\n    const [movieIndexVisible, setMovieIndexVisible] = useState(0);\r\n    const [suggestedMoviesPlay, setSuggestedMoviesPlay] = useState(true);\r\n\r\n    useEffect(() => {\r\n        MoviesAPI.getSuggestedMovies(\r\n            (suggestedMovies) => {\r\n                if (suggestedMovies && suggestedMovies.length > 0) {\r\n                    setMovies(suggestedMovies);\r\n                    onDataLoaded();\r\n                }\r\n            },\r\n            () => console.log('fail'));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        var changeMovie;\r\n        if (suggestedMoviesPlay) {\r\n            changeMovie = setTimeout(() => {\r\n                if (movieIndexVisible === movies.length - 1)\r\n                    setMovieIndexVisible(0)\r\n                else setMovieIndexVisible(movieIndexVisible + 1);\r\n            }, 5000);\r\n        }\r\n\r\n        return () => {\r\n            clearTimeout(changeMovie);\r\n        }\r\n    }, [movieIndexVisible, suggestedMoviesPlay]);\r\n\r\n\r\n    return (\r\n        <div className=\"suggested-movies-container\">\r\n            <SuggestMovieNavigation \r\n                nbMovies={movies?.length} \r\n                selectedIndex={movieIndexVisible}\r\n                onNavElementClick={(index)=>setMovieIndexVisible(index)}/>\r\n            <div className=\"suggested-movies-play-pause\" onClick={() => setSuggestedMoviesPlay(!suggestedMoviesPlay)}>\r\n                <PlayArrowIcon className=\"icon\" style={{ display: suggestedMoviesPlay ? 'none' : '' }} />\r\n                <PauseIcon className=\"icon\" style={{ display: !suggestedMoviesPlay ? 'none' : '' }} />\r\n            </div>\r\n            {movies.map((movie, index) =>\r\n                <SuggestedMovie\r\n                    key={index}\r\n                    movie={movie}\r\n                    visible={index === movieIndexVisible}\r\n                    onMoreClick={() => onMoreClick(movie.id)} />)}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SuggestedMovies;\r\n\r\nfunction SuggestMovieNavigation({ nbMovies, selectedIndex, onNavElementClick }) {\r\n\r\n    const navElements = [];\r\n\r\n    for (let i = 0; i <= nbMovies -1; i++)  \r\n        navElements.push(i);\r\n\r\n    return (\r\n        <div className=\"suggested-movies-nav\">\r\n            {navElements.map((i)=>\r\n             <div   key={i} \r\n                    onClick={()=> onNavElementClick(i)}\r\n                    className={\"nav-elem\" + (selectedIndex === i ? ' selected' : '')}></div> )}\r\n        </div>\r\n    );\r\n}","import \"../style/movies-list.css\";\r\nimport MoviesAPI from \"../js/moviesAPI.js\";\r\nimport MoviesListLite from \"./MoviesListLite\";\r\nimport { useEffect, useState } from 'react';\r\nimport fadeTransition from \"../js/customStyles.js\";\r\n\r\nfunction MoviesListGenreLite({ genre, visible, onMoreClick, onMovieClick}) {\r\n    const [movies, setMovies] = useState([]);\r\n\r\n    useEffect(() => {\r\n        MoviesAPI.getLastMoviesByGenre(genre,\r\n            (moviesOfGenre) => {\r\n                if (moviesOfGenre && moviesOfGenre.length > 0)\r\n                    setMovies(moviesOfGenre);\r\n            },\r\n            () => console.log('fail'));\r\n    }, []);\r\n\r\n    return (\r\n        <div style={fadeTransition(movies && movies.length > 0  && visible, 1)} className=\"movies-list-genre-container\">\r\n            <div className=\"movies-list-header\">\r\n                <div className=\"movies-list-genre\">{genre}</div>\r\n                <div className=\"standard-button red\" onClick={() => onMoreClick()}>More</div>\r\n            </div>\r\n            <MoviesListLite movies={movies} onMovieClick={(movieId)=>onMovieClick(movieId)}/>\r\n        </div>\r\n    );\r\n}\r\nexport default MoviesListGenreLite;","\r\nimport MoviesListGenreLite from \"./MoviesListGenreLite\";\r\nimport { useRef, useEffect, useState } from 'react';\r\n\r\nfunction LastMoviesLists({ onShowGenreFullList, onMovieClick }) {\r\n    const genres = ['Thriller', 'Crime', 'Animation', 'Sci-Fi'];//'Comedy', 'Horror', 'Drama'\r\n    const lastMoviesListRef = useRef(null);\r\n    const [elementsVisible, setElementsVisible] = useState([]);\r\n\r\n    const isElementVisible = (elem, containerBoundings) => {\r\n        const elemBoundings = elem.getBoundingClientRect();\r\n\r\n        return Math.floor(elemBoundings.top) <= Math.floor(containerBoundings.bottom - 100)\r\n            && Math.floor(elemBoundings.bottom) >= Math.floor(containerBoundings.top + 150);\r\n    }\r\n\r\n    const updateElementsVisibility = () => {\r\n        var newElementsVisibility = [];\r\n        var listBoundings = lastMoviesListRef.current.getBoundingClientRect();\r\n        for (let i = 0; i < lastMoviesListRef.current.children.length; i++) {\r\n            newElementsVisibility.push(isElementVisible(lastMoviesListRef.current.children[i], listBoundings));\r\n        }\r\n        setElementsVisible(newElementsVisibility);\r\n    }\r\n\r\n    useEffect(() => {\r\n        var newElementsVisibility = [];\r\n        for (let i = 0; i < lastMoviesListRef.current.children.length; i++) {\r\n            newElementsVisibility.push(true);\r\n        }\r\n        setElementsVisible(newElementsVisibility);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (lastMoviesListRef?.current)\r\n            lastMoviesListRef.current.addEventListener(\"scroll\", updateElementsVisibility, false);\r\n        return () => {\r\n            if (lastMoviesListRef?.current)\r\n                lastMoviesListRef.current.removeEventListener(\"scroll\", updateElementsVisibility);\r\n        }\r\n    }, [lastMoviesListRef]);\r\n\r\n    return (\r\n        <div ref={lastMoviesListRef} style={{ height: '100%', overflowY: 'scroll' }}>\r\n            {genres.map((genre, index) =>\r\n            (\r\n                <MoviesListGenreLite\r\n                    key={genre}\r\n                    visible={elementsVisible[index]}\r\n                    genre={genre}\r\n                    onMoreClick={() => onShowGenreFullList(genre)}\r\n                    onMovieClick={(movieId) => onMovieClick(movieId)} />\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LastMoviesLists;","\r\nimport \"../style/home-page.css\";\r\nimport SuggestedMovies from \"./SuggestedMovies\";\r\nimport LastMoviesLists from \"./LastMoviesLists\";\r\nimport CircularProgressBar from \"./CircularProgressBar\";\r\n\r\nimport fadeTransition from \"../js/customStyles.js\";\r\n\r\nimport { useState } from 'react';\r\n\r\nfunction HomePage({ onMovieClick, onShowGenreFullList }) {\r\n    const [dataLoaded, setDataLoaded] = useState(false);\r\n\r\n    return (\r\n        <div style={{height: '100%'}}>\r\n            <CircularProgressBar color={'white'} size={'80px'} position={\"center\"} visible={!dataLoaded} />\r\n            <div className=\"home-page-container\" style={fadeTransition(dataLoaded)}>\r\n                <div className=\"suggested-movies\">\r\n                    <SuggestedMovies onMoreClick={(movieId) => onMovieClick(movieId)} onDataLoaded={()=>setDataLoaded(true)}/>\r\n                </div>\r\n                <div className=\"last-movies\">\r\n                    <LastMoviesLists\r\n                        onShowGenreFullList={(genre) => onShowGenreFullList(genre)}\r\n                        onMovieClick={(movieId) => onMovieClick(movieId)} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomePage;","\r\nimport { useEffect, useState } from 'react';\r\n\r\nfunction Router({ components, activeComponentId }) {\r\n\r\n    const [activeComponent, setActiveComponent] = useState({});\r\n\r\n    const routerStyle = {\r\n        height: '100%'\r\n    }\r\n\r\n    useEffect(()=>{\r\n        var component = components.find(c => c.id === activeComponentId);\r\n        if(component) setActiveComponent(component);\r\n    },[components, activeComponentId]);\r\n\r\n    return (\r\n        <div style={routerStyle}>\r\n            {activeComponent.render}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Router;","// import logo from './logo.svg';\nimport './App.css';\nimport NavBar from \"./components/NavBar\";\n\nimport SplashScreen from \"./components/SplashScreen\";\n\nimport ModalSearch from \"./components/ModalSearch\";\nimport ModalListGenre from \"./components/ModalListGenre\";\n\nimport MoviesListGenreFull from \"./components/MoviesListGenreFull\";\nimport MovieFullPresentation from \"./components/MovieFullPresentation\";\nimport HomePage from \"./components/HomePage\";\n\nimport Router from \"./components/Router\";\nimport { useEffect, useState } from 'react';\n\n\nfunction App() {\n\n  const [moviesFullListGenre, setMoviesFullListGenre] = useState('');\n  const [loadFullListGenrefromCache, setLoadFullListGenrefromCache] = useState(false);\n\n  const [splashscreenVisible, setSplashscreenVisible] = useState(true);\n  const [modalSearchVisible, setModalSearchVisible] = useState(false);\n  const [modalListGenresVisible, setModalListGenresVisible] = useState(false);\n\n  const [movieId, setMovieId] = useState('');\n\n  const showComponent = (componentId) => {\n    setRouterPreviousComponentId(routerActiveComponentId);\n    setRouterActiveComponentId(componentId);\n  }\n\n  const showMoviesFullListofGenre = (genre) => {\n    setMoviesFullListGenre(genre);\n    setLoadFullListGenrefromCache(false);\n    showComponent(routerIds.moviesGenreFullList);\n  }\n\n  const showMovieFullPresentation = (movieId) => {\n    setModalSearchVisible(false);\n    setMovieId(movieId);\n    showComponent(routerIds.movieFullPresentation);\n  }\n\n  const goToPreviousComponent = () => {\n    showComponent(routerPreviousComponentId);\n  }\n\n  const routerIds = {\n    homePage: 'homePage',\n    moviesGenreFullList: 'moviesOfGenre',\n    movieFullPresentation: 'movieFullPresentation'\n  }\n\n  const router = {\n    components: [\n      {\n        id: routerIds.homePage,\n        render: (<HomePage\n          onMovieClick={(movieId) => showMovieFullPresentation(movieId)}\n          onShowGenreFullList={(genre) => showMoviesFullListofGenre(genre)} />)\n      },\n      {\n        id: routerIds.moviesGenreFullList,\n        render: (<MoviesListGenreFull\n          genre={moviesFullListGenre}\n          loadFromCache={loadFullListGenrefromCache}\n          onMovieClick={(movieId) => showMovieFullPresentation(movieId)} />)\n      },\n      {\n        id: routerIds.movieFullPresentation,\n        render: (<MovieFullPresentation\n          movieId={movieId}\n          onCloseClick={() => { setLoadFullListGenrefromCache(true); goToPreviousComponent(); }} />)\n      }\n    ]\n  };\n  const [routerActiveComponentId, setRouterActiveComponentId] = useState(routerIds.homePage);\n  const [routerPreviousComponentId, setRouterPreviousComponentId] = useState(routerIds.homePage);\n\n  useEffect(()=>{\n    setTimeout(()=>{setSplashscreenVisible(false)}, 4000)\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <SplashScreen visible={splashscreenVisible}/>\n      <ModalSearch\n        visible={modalSearchVisible}\n        onCloseClick={() => setModalSearchVisible(false)}\n        onMovieClick={(movieId) => showMovieFullPresentation(movieId)} />\n      <ModalListGenre\n        visible={modalListGenresVisible}\n        onGenreClick={(genre)=>{ setModalListGenresVisible(false); showMoviesFullListofGenre(genre)}}\n        onCloseClick={() =>setModalListGenresVisible(false)}\n      />\n      <NavBar\n        onSearchClick={() => setModalSearchVisible(true)}\n        onHomeClick={() => setRouterActiveComponentId(routerIds.homePage)} \n        onGenreMenuClick={()=> setModalListGenresVisible(true)}/>\n      <div className=\"app-content\" >\n        <Router components={router.components} activeComponentId={routerActiveComponentId} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}